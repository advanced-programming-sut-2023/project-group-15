Index: src/main/java/org/example/model/UnitWallTarget.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/UnitWallTarget.java b/src/main/java/org/example/model/UnitWallTarget.java
new file mode 100644
--- /dev/null	(date 1682095731694)
+++ b/src/main/java/org/example/model/UnitWallTarget.java	(date 1682095731694)
@@ -0,0 +1,4 @@
+package org.example.model;
+
+public class UnitWallTarget extends Soldier{
+}
Index: src/main/java/org/example/model/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.model;\r\n\r\npublic class Person {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/Person.java b/src/main/java/org/example/model/Person.java
--- a/src/main/java/org/example/model/Person.java	(revision fb05ce80c405a72dfca38c0897abe615583b1444)
+++ b/src/main/java/org/example/model/Person.java	(date 1682095731693)
@@ -1,4 +1,4 @@
 package org.example.model;
 
-public class Person {
+public abstract class Person {
 }
Index: src/main/java/org/example/model/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/People.java b/src/main/java/org/example/model/People.java
new file mode 100644
--- /dev/null	(date 1682095731692)
+++ b/src/main/java/org/example/model/People.java	(date 1682095731692)
@@ -0,0 +1,21 @@
+package org.example.model;
+
+public class People extends Person{
+    public int numberOfPeople;
+
+    private void addPeople(int number){
+        this.numberOfPeople += number;
+    }
+
+    public void setNumberOfPeople(int number){
+        this.numberOfPeople = number;
+    }
+
+    public void removerPeople(int number){
+        this.numberOfPeople -= number;
+    }
+
+    private int getPeopleNumber(){
+        return numberOfPeople;
+    }
+}
Index: src/main/java/org/example/controller/GameMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/GameMenuController.java b/src/main/java/org/example/controller/GameMenuController.java
new file mode 100644
--- /dev/null	(date 1682095731688)
+++ b/src/main/java/org/example/controller/GameMenuController.java	(date 1682095731688)
@@ -0,0 +1,4 @@
+package org.example.controller;
+
+public class GameMenuController {
+}
Index: src/main/java/org/example/model/InfantryUnit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/InfantryUnit.java b/src/main/java/org/example/model/InfantryUnit.java
new file mode 100644
--- /dev/null	(date 1682095731690)
+++ b/src/main/java/org/example/model/InfantryUnit.java	(date 1682095731690)
@@ -0,0 +1,4 @@
+package org.example.model;
+
+public class InfantryUnit extends Soldier{
+}
Index: src/main/java/org/example/model/enums/LauncherUnitName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/enums/LauncherUnitName.java b/src/main/java/org/example/model/enums/LauncherUnitName.java
new file mode 100644
--- /dev/null	(date 1682095731698)
+++ b/src/main/java/org/example/model/enums/LauncherUnitName.java	(date 1682095731698)
@@ -0,0 +1,5 @@
+package org.example.model.enums;
+
+public class LauncherUnitName {
+
+}
Index: src/main/java/org/example/controller/UnitMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/UnitMenuController.java b/src/main/java/org/example/controller/UnitMenuController.java
new file mode 100644
--- /dev/null	(date 1682095731689)
+++ b/src/main/java/org/example/controller/UnitMenuController.java	(date 1682095731689)
@@ -0,0 +1,35 @@
+package org.example.controller;
+import org.example.model.Soldier;
+import org.example.model.enums.State;
+import org.example.model.User;
+public class UnitMenuController {
+    public User currentUser;
+    public boolean unitState;
+    public String type;
+    public int x,y;
+    private void selectUnit(int x,int y){
+        // TODO: add code to verify type of unit
+        this.x = x;
+        this.y = y;
+    }
+
+    private void moveUnit(int x,int y){
+        // TODO: add code to verify type of unit
+    }
+
+    private void setUnit(int x, int y, State state){
+        // TODO: add code to select unit and set state
+    }
+
+    private void airAttack(int x,int y){
+        // TODO: add code to select unit
+    }
+
+    private void disbandUnit(){
+
+    }
+
+    private void build(){
+
+    }
+}
Index: src/main/java/org/example/model/enums/InfantryUnitName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/enums/InfantryUnitName.java b/src/main/java/org/example/model/enums/InfantryUnitName.java
new file mode 100644
--- /dev/null	(date 1682095731697)
+++ b/src/main/java/org/example/model/enums/InfantryUnitName.java	(date 1682095731697)
@@ -0,0 +1,11 @@
+package org.example.model.enums;
+
+public enum InfantryUnitName {
+    ARABIAN_SWORDSMEN,
+    BLACK_MONK,
+    ENGINEER,
+    KNIGHT,
+    PIKEMEN,
+    SLAVES,
+    SWORDSMEN,
+}
Index: src/main/java/org/example/model/enums/UnitWallTargetName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/enums/UnitWallTargetName.java b/src/main/java/org/example/model/enums/UnitWallTargetName.java
new file mode 100644
--- /dev/null	(date 1682095731699)
+++ b/src/main/java/org/example/model/enums/UnitWallTargetName.java	(date 1682095731699)
@@ -0,0 +1,5 @@
+package org.example.model.enums;
+
+public class UnitWallTargetName {
+
+}
Index: src/main/java/org/example/view/LoginMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.LoginMenuController;\r\nimport org.example.controller.ProfileMenuController;\r\nimport org.example.view.enums.commands.LoginMenuEnum;\r\nimport org.example.view.enums.outputs.LoginMenuOutput;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class LoginMenu {\r\n    private final LoginMenuController loginMenuController = new ProfileMenuController();\r\n\r\n    public void run(InputScanner loginMenuScanner) {\r\n        Matcher loginMenuMatcher;\r\n        String userInput;\r\n        while (true) {\r\n            userInput = loginMenuScanner.getScanner().nextLine();\r\n            if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))\r\n                return;\r\n            //TODO: completing login menu...\r\n        }\r\n    }\r\n\r\n    public void loginInCheck(Matcher mainMenuMatcher) {\r\n        loginMenuController.setUsername(\"username\");\r\n        loginMenuController.setPassword(\"password\");\r\n        loginMenuController.setStayLoggedInFlag(mainMenuMatcher.group(\"stayLogged\") != null);\r\n        String message = loginMenuController.loginUser().getOutput();\r\n        if (message.equals(LoginMenuOutput.LOGGED_IN_SUCCESSFULY)) {\r\n            //TODO: about saving user in the game...\r\n            InputScanner loginMenuScanner = new InputScanner();\r\n            run(loginMenuScanner);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/LoginMenu.java b/src/main/java/org/example/view/LoginMenu.java
--- a/src/main/java/org/example/view/LoginMenu.java	(revision fb05ce80c405a72dfca38c0897abe615583b1444)
+++ b/src/main/java/org/example/view/LoginMenu.java	(date 1682095731700)
@@ -3,8 +3,14 @@
 import org.example.InputScanner;
 import org.example.controller.LoginMenuController;
 import org.example.controller.ProfileMenuController;
+<<<<<<< HEAD:src/main/java/org/example/view/LoginMenu.java
 import org.example.view.enums.commands.LoginMenuEnum;
 import org.example.view.enums.outputs.LoginMenuOutput;
+=======
+import org.example.veiw.enums.commands.LoginMenuEnum;
+import org.example.veiw.enums.commands.ProfileMenuEnum;
+import org.example.veiw.enums.outputs.LoginMenuOutput;
+>>>>>>> 4a84ab567473a2c4ddf99dbf1c8b438b0ebc58d6:src/main/java/org/example/veiw/LoginMenu.java
 
 import java.util.regex.Matcher;
 
@@ -18,7 +24,9 @@
             userInput = loginMenuScanner.getScanner().nextLine();
             if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))
                 return;
-            //TODO: completing login menu...
+            else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_USERNAME))!=null) {
+                new ProfileMenu().changeProfile(loginMenuMatcher);
+            }
         }
     }
 
Index: src/main/java/org/example/view/ProfileMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\npublic class ProfileMenu {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/ProfileMenu.java b/src/main/java/org/example/view/ProfileMenu.java
--- a/src/main/java/org/example/view/ProfileMenu.java	(revision fb05ce80c405a72dfca38c0897abe615583b1444)
+++ b/src/main/java/org/example/view/ProfileMenu.java	(date 1682095731702)
@@ -1,4 +1,13 @@
 package org.example.view;
 
+import org.example.controller.ProfileMenuController;
+
+import java.util.regex.Matcher;
+
 public class ProfileMenu {
+    private final ProfileMenuController profileMenuController = new ProfileMenuController();
+    public void changeProfile(Matcher loginMenuMatcher) {
+
+        profileMenuController.setUsername(loginMenuMatcher.group("username"));
+    }
 }
Index: src/main/java/org/example/view/GameMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/GameMenu.java b/src/main/java/org/example/view/GameMenu.java
new file mode 100644
--- /dev/null	(date 1682095731700)
+++ b/src/main/java/org/example/view/GameMenu.java	(date 1682095731700)
@@ -0,0 +1,4 @@
+package org.example.veiw;
+
+public class GameMenu {
+}
Index: src/main/java/org/example/model/Worker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/Worker.java b/src/main/java/org/example/model/Worker.java
new file mode 100644
--- /dev/null	(date 1682095731697)
+++ b/src/main/java/org/example/model/Worker.java	(date 1682095731697)
@@ -0,0 +1,21 @@
+package org.example.model;
+
+public class Worker extends Person{
+    public int numberOfWorker;
+
+    private void addWorker(int number){
+        this.numberOfWorker += number;
+    }
+
+    private void setNumberOfWorker(int number){
+        this.numberOfWorker = number;
+    }
+
+    private void removeWorker(int number){
+        this.numberOfWorker -= number;
+    }
+
+    private int getWorkerNumber(){
+        return this.numberOfWorker;
+    }
+}
Index: src/main/java/org/example/view/enums/commands/ProfileMenuEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view.enums.commands;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic enum ProfileMenuEnum {\r\n    CHANGE_PROFILE(\"^\\\\s*profile\\\\s+change\\\\s*\"),\r\n    CHANGE_PASSWORD(\"^\\\\s*profile\\\\s+change\\\\s+password\\\\s*\"),\r\n    CHANGE_SLOGAN(\"^\\\\s*profile\\\\s+change\\\\s+slogan\\\\s*\"),\r\n    REMOVE_SLOGAN(\"^\\\\s*profile\\\\s+remove\\\\s+slogan\\\\s*$\"),\r\n    DISPLAY_USER_PROFILE(\"^\\\\s*profile\\\\s+display\\\\s+high\\\\s*score\\\\s*$\"),\r\n    DISPLAY_USER_RANK(\"^\\\\s*profile\\\\s+display\\\\s+rank\\\\s*$\"),\r\n    DISPLAY_USER_SLOGAN(\"^\\\\s*profile\\\\s+display\\\\s+slogan\\\\s*$\"),\r\n    DISPLAY_PROFILE(\"^\\\\s*profile\\\\s+display\\\\s*$\"),\r\n\r\n\r\n    ;\r\n    private final String regex;\r\n    ProfileMenuEnum(String regex) {\r\n        this.regex = regex;\r\n    }\r\n    public String getRegex() {\r\n        return this.regex;\r\n    }\r\n\r\n    public static Matcher getMatcher(String input, ProfileMenuEnum regex) {\r\n        Matcher matcher = Pattern.compile(regex.regex,Pattern.CASE_INSENSITIVE).matcher(input);\r\n        return matcher.matches() ? matcher : null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/enums/commands/ProfileMenuEnum.java b/src/main/java/org/example/view/enums/commands/ProfileMenuEnum.java
--- a/src/main/java/org/example/view/enums/commands/ProfileMenuEnum.java	(revision fb05ce80c405a72dfca38c0897abe615583b1444)
+++ b/src/main/java/org/example/view/enums/commands/ProfileMenuEnum.java	(date 1682095731703)
@@ -4,7 +4,9 @@
 import java.util.regex.Pattern;
 
 public enum ProfileMenuEnum {
-    CHANGE_PROFILE("^\\s*profile\\s+change\\s*"),
+    CHANGE_PROFILE_USERNAME("^\\s*profile\\s+change\\s*(\\s*-u\\s+(?<username>[^\\\"][^\\s]+|\\\"[^\\\"]+\\\"))\\s*$"),
+    CREATE_USER("\\s*user\\s+create((\\s+-u\\s+(?<username>\\S+|(\"[^\"]+\")))|"+"(\\s+-p\\s+(?<password>\\S+|(\"[^\"]+\"))(\\s+(?<passwordConfirmation>\\S+|(\"[^\"]+\")))?)|" +
+            "(\\s+-email\\s+(?<email>\\S+|(\"[^\"]+\")))|"+"(\\s+-n\\s+(?<nickname>\\S+|(\"[^\"]+\")))|(\\s+-s\\s+(?<slogan>\\S*|(\"[^\"]+\"))))*\\s*"),
     CHANGE_PASSWORD("^\\s*profile\\s+change\\s+password\\s*"),
     CHANGE_SLOGAN("^\\s*profile\\s+change\\s+slogan\\s*"),
     REMOVE_SLOGAN("^\\s*profile\\s+remove\\s+slogan\\s*$"),
Index: src/main/java/org/example/model/Soldier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/Soldier.java b/src/main/java/org/example/model/Soldier.java
new file mode 100644
--- /dev/null	(date 1682095731693)
+++ b/src/main/java/org/example/model/Soldier.java	(date 1682095731693)
@@ -0,0 +1,57 @@
+package org.example.model;
+
+public class Soldier extends Person{
+    public int speed;
+    public int attackingPower;
+    public int deffense;
+    public int x;
+    public int y;
+
+    private void Soldier(int speed,int attackingPower,int deffense,int x,int y){
+        this.speed = speed;
+        this.attackingPower = attackingPower;
+        this.deffense = deffense;
+        this.x = x;
+        this.y = y;
+    }
+
+    private void setSpeed(int speed){
+        this.speed = speed;
+    }
+
+    private void setAttackingPower(int attackingPower) {
+        this.attackingPower = attackingPower;
+    }
+
+    private void setDeffense(int deffense) {
+        this.deffense = deffense;
+    }
+
+    private void setX(int x) {
+        this.x = x;
+    }
+
+    private void setY(int y) {
+        this.y = y;
+    }
+
+    private int getDeffense() {
+        return deffense;
+    }
+
+    private int getAttackingPower() {
+        return attackingPower;
+    }
+
+    private int getSpeed() {
+        return speed;
+    }
+
+    private int getX() {
+        return x;
+    }
+
+    private int getY() {
+        return y;
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"creating files...\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/governmentController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/Government.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OdNK38UNz2OrnIqCzmN0SMvyKl\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/uni/ap/exercises/2/snappfood\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example.veiw.enums\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"\" />\r\n      <created>1681886432173</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681886432173</updated>\r\n      <workItem from=\"1681886433354\" duration=\"78000\" />\r\n      <workItem from=\"1681886686257\" duration=\"2512000\" />\r\n      <workItem from=\"1682084994720\" duration=\"4296000\" />\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۱\" summary=\"creating files...\">\r\n      <created>1681886768892</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <updated>1681886768892</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۲\" summary=\"creating files...\">\r\n      <created>1682085187908</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <updated>1682085187908</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۳\" summary=\"creating files...\">\r\n      <created>1682085989441</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <updated>1682085989441</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"creating files...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"creating files...\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fb05ce80c405a72dfca38c0897abe615583b1444)
+++ b/.idea/workspace.xml	(date 1682095731687)
@@ -8,6 +8,12 @@
       <change afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/governmentController.java" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/src/main/java/org/example/model/Government.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+<<<<<<< HEAD
+=======
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/veiw/LoginMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/veiw/LoginMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/veiw/ProfileMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/veiw/ProfileMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/veiw/enums/commands/ProfileMenuEnum.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/veiw/enums/commands/ProfileMenuEnum.java" afterDir="false" />
+>>>>>>> 4a84ab567473a2c4ddf99dbf1c8b438b0ebc58d6
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -64,7 +70,8 @@
       <updated>1681886432173</updated>
       <workItem from="1681886433354" duration="78000" />
       <workItem from="1681886686257" duration="2512000" />
-      <workItem from="1682084994720" duration="4296000" />
+      <workItem from="1682084994720" duration="4517000" />
+      <workItem from="1682091000420" duration="2004000" />
     </task>
     <task id="LOCAL‎−۰۰۰۰۱" summary="creating files...">
       <created>1681886768892</created>
@@ -84,7 +91,13 @@
       <option name="presentableId" value="LOCAL‎−۰۰۰۰۳" />
       <updated>1682085989441</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL‎−۰۰۰۰۴" summary="creating files...">
+      <created>1682089936428</created>
+      <option name="number" value="LOCAL‎−۰۰۰۰۴" />
+      <option name="presentableId" value="LOCAL‎−۰۰۰۰۴" />
+      <updated>1682089936428</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/main/java/org/example/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/User.java b/src/main/java/org/example/model/User.java
new file mode 100644
--- /dev/null	(date 1682095731695)
+++ b/src/main/java/org/example/model/User.java	(date 1682095731695)
@@ -0,0 +1,92 @@
+package org.example.model;
+
+public class User {
+    public String username;
+    public String password;
+    public String nickname;
+    public String email;
+    private String passRecoveryQuestion;
+    public String passRecoveryAnswer;
+    public int score;
+    public int rank;
+    public String slogan;
+
+    private void User(String username,String password,String nickname,String email){
+        this.username = username;
+        this.password = password;
+        this.nickname = nickname;
+        this.email = email;
+    }
+
+    private void User(String username,String password,String nickname,String email,String slogan){
+        this.username = username;
+        this.password = password;
+        this.nickname = nickname;
+        this.email = email;
+        this.slogan = slogan;
+    }
+
+    private String getUsername(){
+        return this.username;
+    }
+
+    private String getPassword(){
+        return this.password;
+    }
+
+    private String getNickname(){
+        return this.nickname;
+    }
+
+    private String getEmail(){
+        return this.email;
+    }
+
+    private String getSlogan(){
+        return this.slogan;
+    }
+
+    private int getRank(){
+        return this.rank;
+    }
+
+    private int getScore(){
+        return this.score;
+    }
+
+    private void setPassword(String password){
+        this.password = password;
+    }
+
+    private void setUsername(String username){
+        this.username = username;
+    }
+
+    private void setNickname(String nickname){
+        this.nickname = nickname;
+    }
+
+    private void setEmail(String email){
+        this.email = email;
+    }
+
+    private void setSlogan(String slogan){
+        this.slogan = slogan;
+    }
+
+    private void setPassRecoveryQuestion(String passRecoveryQuestion){
+        this.passRecoveryQuestion = passRecoveryQuestion;
+    }
+
+    private void setPassRecoveryAnswer(String passRecoveryAnswer){
+        this.passRecoveryAnswer = passRecoveryAnswer;
+    }
+
+    private String getPassRecoveryQuestion(){
+        return this.passRecoveryQuestion;
+    }
+
+    private String getPassRecoveryAnswer(){
+        return this.passRecoveryAnswer;
+    }
+}
Index: src/main/java/org/example/model/LauncherUnit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/LauncherUnit.java b/src/main/java/org/example/model/LauncherUnit.java
new file mode 100644
--- /dev/null	(date 1682095731691)
+++ b/src/main/java/org/example/model/LauncherUnit.java	(date 1682095731691)
@@ -0,0 +1,4 @@
+package org.example.model;
+
+public class LauncherUnit extends Soldier{
+}
