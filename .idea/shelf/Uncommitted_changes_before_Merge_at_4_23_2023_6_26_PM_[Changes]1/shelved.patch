Index: src/main/java/org/example/view/ProfileMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\nimport org.example.controller.LoginMenuController;\r\nimport org.example.controller.ProfileMenuController;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class ProfileMenu extends LoginMenu{\r\n    private final ProfileMenuController profileMenuController;\r\n    public ProfileMenu(LoginMenuController currentUserController) {\r\n        this.profileMenuController = (ProfileMenuController) currentUserController;\r\n    }\r\n    protected void changeUserUsername(Matcher matcher) {\r\n        String username = matcher.group(\"username\");\r\n        System.out.println(profileMenuController.changeUsername(username).getOutput());\r\n    }\r\n\r\n    protected void changeUserPassword(Matcher matcher) {\r\n        String oldPass = matcher.group(\"oldPass\");\r\n        String newPass = matcher.group(\"newPass\");\r\n        //System.out.println(profileMenuController.changePassword(oldPass,newPass));\r\n    }\r\n    protected void changeUserNickname(Matcher matcher) {\r\n        String nickName = matcher.group(\"nickname\");\r\n        System.out.println(profileMenuController.changeNickname(nickName));\r\n    }\r\n    protected void changeUserEmail(Matcher matcher) {\r\n        String email = matcher.group(\"email\");\r\n        System.out.println(profileMenuController.changeEmail(email));\r\n    }\r\n    protected void changeUserSlogan(Matcher matcher) {\r\n        String slogan = matcher.group(\"slogan\");\r\n        System.out.println(profileMenuController.changeSlogan(slogan));\r\n    }\r\n\r\n   /* protected void removeUserSlogan() {\r\n        System.out.println(profileMenuController.removeSlogan());\r\n    }*/\r\n\r\n    protected void displayUserProfile() {\r\n        profileMenuController.showUserHighestScore();\r\n    }\r\n\r\n    protected void displayUserRank() {\r\n        profileMenuController.showUserRank();\r\n    }\r\n\r\n    protected void displayUserSlogan() {\r\n        profileMenuController.showUserSlogan();\r\n\r\n    }\r\n    protected void displayUserInfo() {\r\n        profileMenuController.showUserProfileDisplay();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/ProfileMenu.java b/src/main/java/org/example/view/ProfileMenu.java
--- a/src/main/java/org/example/view/ProfileMenu.java	
+++ b/src/main/java/org/example/view/ProfileMenu.java	
@@ -18,7 +18,7 @@
     protected void changeUserPassword(Matcher matcher) {
         String oldPass = matcher.group("oldPass");
         String newPass = matcher.group("newPass");
-        //System.out.println(profileMenuController.changePassword(oldPass,newPass));
+        System.out.println(profileMenuController.changePassword(oldPass,newPass));
     }
     protected void changeUserNickname(Matcher matcher) {
         String nickName = matcher.group("nickname");
@@ -33,9 +33,9 @@
         System.out.println(profileMenuController.changeSlogan(slogan));
     }
 
-   /* protected void removeUserSlogan() {
+    protected void removeUserSlogan() {
         System.out.println(profileMenuController.removeSlogan());
-    }*/
+    }
 
     protected void displayUserProfile() {
         profileMenuController.showUserHighestScore();
Index: src/main/java/org/example/controller/governmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/governmentController.java b/src/main/java/org/example/controller/governmentController.java
deleted file mode 100644
--- a/src/main/java/org/example/controller/governmentController.java	
+++ /dev/null	
@@ -1,4 +0,0 @@
-package org.example.controller;
-
-public class governmentController {
-}
Index: .idea/project-group-15.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/project-group-15.iml b/.idea/project-group-15.iml
--- a/.idea/project-group-15.iml	
+++ b/.idea/project-group-15.iml	
@@ -1,12 +1,19 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_19">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.passay:passay:1.6.3" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: src/main/java/org/example/controller/mapChangesMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller;\r\nimport org.example.model.enums.LandType;\r\nimport org.example.model.map;\r\n\r\npublic class mapChangesMenuController {\r\n    private void setTexture(int x , int y,String type)\r\n    {\r\n        for(LandType l : LandType.values())\r\n            if(l.equals(type)) {\r\n             LandType  newLandType = l;\r\n             map.findATile(x , y).setLandType(newLandType);\r\n            }\r\n\r\n\r\n    }\r\n    private void setTexture(int x1, int y1,int x2, int y2,String type)\r\n    {\r\n\r\n    }\r\n    private void clear(int x , int y)\r\n    {\r\n        map.findATile(x ,y).setBuilding(null);\r\n        map.findATile(x , y).setSoldier(null);\r\n\r\n\r\n    }\r\n    private void dropUnit(int x , int y, String type)\r\n    {\r\n        //TODO list of units should be added to make this method work\r\n\r\n    }\r\n    private void dropBuilding(int x , int y , String type)\r\n    {\r\n\r\n    }\r\n    private void dropTree(int x , int y, String type)\r\n    {\r\n        // TODO the input string should be matched with the one in enum\r\n        map.findATile(x , y).setTreeName(type);\r\n\r\n    }\r\n    private void dropRock(int x , int y , char direction)\r\n    {\r\n        //TODO direction should be added\r\n        map.findATile(x,y).setRock();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/mapChangesMenuController.java b/src/main/java/org/example/controller/mapChangesMenuController.java
--- a/src/main/java/org/example/controller/mapChangesMenuController.java	
+++ b/src/main/java/org/example/controller/mapChangesMenuController.java	
@@ -1,49 +1,1 @@
-package org.example.controller;
-import org.example.model.enums.LandType;
-import org.example.model.map;
-
-public class mapChangesMenuController {
-    private void setTexture(int x , int y,String type)
-    {
-        for(LandType l : LandType.values())
-            if(l.equals(type)) {
-             LandType  newLandType = l;
-             map.findATile(x , y).setLandType(newLandType);
-            }
-
-
-    }
-    private void setTexture(int x1, int y1,int x2, int y2,String type)
-    {
-
-    }
-    private void clear(int x , int y)
-    {
-        map.findATile(x ,y).setBuilding(null);
-        map.findATile(x , y).setSoldier(null);
-
-
-    }
-    private void dropUnit(int x , int y, String type)
-    {
-        //TODO list of units should be added to make this method work
-
-    }
-    private void dropBuilding(int x , int y , String type)
-    {
-
-    }
-    private void dropTree(int x , int y, String type)
-    {
-        // TODO the input string should be matched with the one in enum
-        map.findATile(x , y).setTreeName(type);
-
-    }
-    private void dropRock(int x , int y , char direction)
-    {
-        //TODO direction should be added
-        map.findATile(x,y).setRock();
-
-    }
-
-}
+//test
\ No newline at end of file
Index: src/main/java/org/example/controller/GovernmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/GovernmentController.java b/src/main/java/org/example/controller/GovernmentController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/controller/GovernmentController.java	
@@ -0,0 +1,4 @@
+package org.example.controller;
+
+public class GovernmentController {
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,5 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="19" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
Index: src/main/java/org/example/view/GameMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.veiw;\r\n\r\npublic class GameMenu {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/GameMenu.java b/src/main/java/org/example/view/GameMenu.java
--- a/src/main/java/org/example/view/GameMenu.java	
+++ b/src/main/java/org/example/view/GameMenu.java	
@@ -1,4 +1,4 @@
-package org.example.veiw;
+package org.example.view;
 
 public class GameMenu {
 }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_4_23_2023_5_43_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_23_2023_5_43_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_23_2023_5_43_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_23_2023_5_43_PM_[Changes]/shelved.patch	
@@ -0,0 +1,132 @@
+Index: src/main/java/org/example/controller/mapMenuController.java
+===================================================================
+diff --git a/src/main/java/org/example/controller/mapMenuController.java b/src/main/java/org/example/controller/mapMenuController.java
+deleted file mode 100644
+--- a/src/main/java/org/example/controller/mapMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
++++ /dev/null	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+@@ -1,62 +0,0 @@
+-package org.example.controller;
+-import org.example.model.map;
+-import org.example.model.tile;
+-
+-public class mapMenuController {
+-    public mapMenuController() {
+-    }
+-
+-    public void showMap(int x, int y) {
+-        tile currentTile = map.getCurrentMap()[x][y];
+-        tile[][] mapToShow = new tile[11][11];
+-        int xS = x - 5;  // x startpoint
+-        int xE = x + 5;  // x endpoint
+-        if (xS < 0) {
+-            xE += -xS;
+-            xS = 0;
+-        }
+-        if (xE > 199) {
+-            xS -= xE - 199;
+-            xE = 199;
+-        }
+-        int yS = y - 5;  // y startpoint
+-        int yE = y + 5;  // y endpoint
+-        if (yS < 0) {
+-            yE += -yS;
+-            yS = 0;
+-        }
+-        if (yE > 199) {
+-            yS -= yE - 199;
+-            yE = 199;
+-        }
+-
+-        for (int i = xS; i < xE; i++) {
+-            for (int j = yS; j < yE; j++) {
+-                if (map.getCurrentMap()[i][j].getSoldier() != null) {
+-                    System.out.println("S");
+-                    continue;
+-                } else if (map.getCurrentMap()[i][j].getBuilding() != null) {
+-                    System.out.println("B");
+-                    continue;
+-                } else
+-                    System.out.println(map.getCurrentMap()[i][j].getLandType().getMapId());
+-            }
+-
+-        }
+-
+-
+-    }
+-
+-    private String showDetails(int x , int y) {
+-        String answer = "LandType : " ;
+-        answer = answer.concat(map.getCurrentMap()[x][y].getLandType().values().toString());
+-        if (map.getCurrentMap()[x][y].getBuilding() == null) {
+-            //answer = answer.concat("\n" + map.getCurrentMap()[x][y].getBuilding().get().toString());
+-        }
+-        return answer ;
+-    }
+-}
+-
+-
+-
+-
+Index: src/main/java/org/example/controller/governmentController.java
+===================================================================
+diff --git a/src/main/java/org/example/controller/governmentController.java b/src/main/java/org/example/controller/governmentController.java
+deleted file mode 100644
+--- a/src/main/java/org/example/controller/governmentController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
++++ /dev/null	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+@@ -1,4 +0,0 @@
+-package org.example.controller;
+-
+-public class governmentController {
+-}
+Index: src/main/java/org/example/view/MapMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/view/MapMenu.java b/src/main/java/org/example/view/MapMenu.java
+new file mode 100644
+--- /dev/null	(date 1682259046053)
++++ b/src/main/java/org/example/view/MapMenu.java	(date 1682259046053)
+@@ -0,0 +1,42 @@
++package org.example.view;
++
++import org.example.InputScanner;
++import org.example.controller.mapMenuController;
++import org.example.model.map;
++import org.example.view.enums.commands.mapMenuEnum;
++
++import java.util.regex.Matcher;
++
++public class mapMenu {
++    private void run(Matcher matcher)
++    {
++        String command;
++        InputScanner scanner = new InputScanner();
++        while (true)
++        {
++            command = scanner.getScanner().nextLine();
++            if(command.matches("\\s*exit\\s*"))
++                break;
++            else if(mapMenuEnum.getMatcher(command,mapMenuEnum.SHOW_MAP) != null)
++                showMap(Integer.parseInt(matcher.group("xCoordinate"))
++                        , Integer.parseInt(matcher.group("yCoordinate")));
++                    //TODO moving on map is not available now
++
++
++        }
++
++    }
++    private static void showMap(int x,int y)
++    {
++        mapMenuController controller = new mapMenuController();
++        controller.showMap(x , y);
++
++    }
++
++    private map showDetails(int x , int y)
++    {
++        // TODO : only a tile should be shown
++        return null;
++
++    }
++}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_40_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_40_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_40_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_40_PM_[Changes]/shelved.patch	
@@ -0,0 +1,1604 @@
+Index: src/main/java/org/example/view/MapMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.mapMenuController;\r\nimport org.example.model.map;\r\nimport org.example.view.enums.commands.mapMenuEnum;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class mapMenu {\r\n    private void run(Matcher matcher)\r\n    {\r\n        String command;\r\n        InputScanner scanner = new InputScanner();\r\n        while (true)\r\n        {\r\n            command = scanner.getScanner().nextLine();\r\n            if(command.matches(\"\\\\s*exit\\\\s*\"))\r\n                break;\r\n            else if(mapMenuEnum.getMatcher(command,mapMenuEnum.SHOW_MAP) != null)\r\n                showMap(Integer.parseInt(matcher.group(\"xCoordinate\"))\r\n                        , Integer.parseInt(matcher.group(\"yCoordinate\")));\r\n                    //TODO moving on map is not available now\r\n\r\n\r\n        }\r\n\r\n    }\r\n    private static void showMap(int x,int y)\r\n    {\r\n        mapMenuController controller = new mapMenuController();\r\n        controller.showMap(x , y);\r\n\r\n    }\r\n\r\n    private map showDetails(int x , int y)\r\n    {\r\n        // TODO : only a tile should be shown\r\n        return null;\r\n\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/view/MapMenu.java b/src/main/java/org/example/view/MapMenu.java
+new file mode 100644
+--- /dev/null	(date 1682258935194)
++++ b/src/main/java/org/example/view/MapMenu.java	(date 1682258935194)
+@@ -0,0 +1,42 @@
++package org.example.view;
++
++import org.example.InputScanner;
++import org.example.controller.mapMenuController;
++import org.example.model.map;
++import org.example.view.enums.commands.mapMenuEnum;
++
++import java.util.regex.Matcher;
++
++public class mapMenu {
++    private void run(Matcher matcher)
++    {
++        String command;
++        InputScanner scanner = new InputScanner();
++        while (true)
++        {
++            command = scanner.getScanner().nextLine();
++            if(command.matches("\\s*exit\\s*"))
++                break;
++            else if(mapMenuEnum.getMatcher(command,mapMenuEnum.SHOW_MAP) != null)
++                showMap(Integer.parseInt(matcher.group("xCoordinate"))
++                        , Integer.parseInt(matcher.group("yCoordinate")));
++                    //TODO moving on map is not available nowgit
++
++
++        }
++
++    }
++    private static void showMap(int x,int y)
++    {
++        mapMenuController controller = new mapMenuController();
++        controller.showMap(x , y);
++
++    }
++
++    private map showDetails(int x , int y)
++    {
++        // TODO : only a tile should be shown
++        return null;
++
++    }
++}
+Index: src/main/java/org/example/controller/mapChangesMenuController.java
+===================================================================
+diff --git a/src/main/java/org/example/controller/mapChangesMenuController.java b/src/main/java/org/example/controller/mapChangesMenuController.java
+deleted file mode 100644
+--- a/src/main/java/org/example/controller/mapChangesMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
++++ /dev/null	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+@@ -1,49 +0,0 @@
+-package org.example.controller;
+-import org.example.model.enums.LandType;
+-import org.example.model.map;
+-
+-public class mapChangesMenuController {
+-    private void setTexture(int x , int y,String type)
+-    {
+-        for(LandType l : LandType.values())
+-            if(l.equals(type)) {
+-             LandType  newLandType = l;
+-             map.findATile(x , y).setLandType(newLandType);
+-            }
+-
+-
+-    }
+-    private void setTexture(int x1, int y1,int x2, int y2,String type)
+-    {
+-
+-    }
+-    private void clear(int x , int y)
+-    {
+-        map.findATile(x ,y).setBuilding(null);
+-        map.findATile(x , y).setSoldier(null);
+-
+-
+-    }
+-    private void dropUnit(int x , int y, String type)
+-    {
+-        //TODO list of units should be added to make this method work
+-
+-    }
+-    private void dropBuilding(int x , int y , String type)
+-    {
+-
+-    }
+-    private void dropTree(int x , int y, String type)
+-    {
+-        // TODO the input string should be matched with the one in enum
+-        map.findATile(x , y).setTreeName(type);
+-
+-    }
+-    private void dropRock(int x , int y , char direction)
+-    {
+-        //TODO direction should be added
+-        map.findATile(x,y).setRock();
+-
+-    }
+-
+-}
+Index: src/main/java/org/example/controller/MapMenuController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/controller/MapMenuController.java b/src/main/java/org/example/controller/MapMenuController.java
+new file mode 100644
+--- /dev/null	(date 1682258767128)
++++ b/src/main/java/org/example/controller/MapMenuController.java	(date 1682258767128)
+@@ -0,0 +1,62 @@
++package org.example.controller;
++import org.example.model.map;
++import org.example.model.tile;
++
++public class mapMenuController {
++    public mapMenuController() {
++    }
++
++    public void showMap(int x, int y) {
++        tile currentTile = map.getCurrentMap()[x][y];
++        tile[][] mapToShow = new tile[11][11];
++        int xS = x - 5;  // x startpoint
++        int xE = x + 5;  // x endpoint
++        if (xS < 0) {
++            xE += -xS;
++            xS = 0;
++        }
++        if (xE > 199) {
++            xS -= xE - 199;
++            xE = 199;
++        }
++        int yS = y - 5;  // y startpoint
++        int yE = y + 5;  // y endpoint
++        if (yS < 0) {
++            yE += -yS;
++            yS = 0;
++        }
++        if (yE > 199) {
++            yS -= yE - 199;
++            yE = 199;
++        }
++
++        for (int i = xS; i < xE; i++) {
++            for (int j = yS; j < yE; j++) {
++                if (map.getCurrentMap()[i][j].getSoldier() != null) {
++                    System.out.println("S");
++                    continue;
++                } else if (map.getCurrentMap()[i][j].getBuilding() != null) {
++                    System.out.println("B");
++                    continue;
++                } else
++                    System.out.println(map.getCurrentMap()[i][j].getLandType().getMapId());
++            }
++
++        }
++
++
++    }
++
++    private String showDetails(int x , int y) {
++        String answer = "LandType : " ;
++        answer = answer.concat(map.getCurrentMap()[x][y].getLandType().values().toString());
++        if (map.getCurrentMap()[x][y].getBuilding() == null) {
++            //answer = answer.concat("\n" + map.getCurrentMap()[x][y].getBuilding().get().toString());
++        }
++        return answer ;
++    }
++}
++
++
++
++
+Index: src/main/java/org/example/controller/GovernmentController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/controller/GovernmentController.java b/src/main/java/org/example/controller/GovernmentController.java
+new file mode 100644
+--- /dev/null	(date 1682258767127)
++++ b/src/main/java/org/example/controller/GovernmentController.java	(date 1682258767127)
+@@ -0,0 +1,4 @@
++package org.example.controller;
++
++public class governmentController {
++}
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_36_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_36_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_36_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1682258766832)
++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_36_PM_[Changes]/shelved.patch	(date 1682258766832)
+@@ -0,0 +1,1398 @@
++Index: src/main/java/org/example/view/mapMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.mapMenuController;\r\nimport org.example.model.map;\r\nimport org.example.view.enums.commands.mapMenuEnum;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class mapMenu {\r\n    private void run(Matcher matcher)\r\n    {\r\n        String command;\r\n        InputScanner scanner = new InputScanner();\r\n        while (true)\r\n        {\r\n            command = scanner.getScanner().nextLine();\r\n            if(command.matches(\"\\\\s*exit\\\\s*\"))\r\n                break;\r\n            else if(mapMenuEnum.getMatcher(command,mapMenuEnum.SHOW_MAP) != null)\r\n                showMap(Integer.parseInt(matcher.group(\"xCoordinate\"))\r\n                        , Integer.parseInt(matcher.group(\"yCoordinate\")));\r\n                    //TODO moving on map is not available now\r\n\r\n\r\n        }\r\n\r\n    }\r\n    private static void showMap(int x,int y)\r\n    {\r\n        mapMenuController controller = new mapMenuController();\r\n        controller.showMap(x , y);\r\n\r\n    }\r\n\r\n    private map showDetails(int x , int y)\r\n    {\r\n        // TODO : only a tile should be shown\r\n        return null;\r\n\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/mapMenu.java b/src/main/java/org/example/view/MapMenu.java
++rename from src/main/java/org/example/view/mapMenu.java
++rename to src/main/java/org/example/view/MapMenu.java
++--- a/src/main/java/org/example/view/mapMenu.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/MapMenu.java	(date 1682258533856)
++@@ -7,7 +7,7 @@
++ 
++ import java.util.regex.Matcher;
++ 
++-public class mapMenu {
+++public class MapMenu {
++     private void run(Matcher matcher)
++     {
++         String command;
++@@ -26,7 +26,15 @@
++         }
++ 
++     }
+++<<<<<<< HEAD:src/main/java/org/example/view/mapMenu.java
++     private static void showMap(int x,int y)
+++=======
+++
+++    public void enterMapEnvironmentSettings() {
+++
+++    }
+++   /* private map showMap(int x,int y )
+++>>>>>>> origin/mahdi:src/main/java/org/example/view/MapMenu.java
++     {
++         mapMenuController controller = new mapMenuController();
++         controller.showMap(x , y);
++Index: src/main/java/org/example/controller/mapMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.controller;\r\nimport org.example.model.map;\r\nimport org.example.model.tile;\r\n\r\npublic class mapMenuController {\r\n    public mapMenuController() {\r\n    }\r\n\r\n    public void showMap(int x, int y) {\r\n        tile currentTile = map.getCurrentMap()[x][y];\r\n        tile[][] mapToShow = new tile[11][11];\r\n        int xS = x - 5;  // x startpoint\r\n        int xE = x + 5;  // x endpoint\r\n        if (xS < 0) {\r\n            xE += -xS;\r\n            xS = 0;\r\n        }\r\n        if (xE > 199) {\r\n            xS -= xE - 199;\r\n            xE = 199;\r\n        }\r\n        int yS = y - 5;  // y startpoint\r\n        int yE = y + 5;  // y endpoint\r\n        if (yS < 0) {\r\n            yE += -yS;\r\n            yS = 0;\r\n        }\r\n        if (yE > 199) {\r\n            yS -= yE - 199;\r\n            yE = 199;\r\n        }\r\n\r\n        for (int i = xS; i < xE; i++) {\r\n            for (int j = yS; j < yE; j++) {\r\n                if (map.getCurrentMap()[i][j].getSoldier() != null) {\r\n                    System.out.println(\"S\");\r\n                    continue;\r\n                } else if (map.getCurrentMap()[i][j].getBuilding() != null) {\r\n                    System.out.println(\"B\");\r\n                    continue;\r\n                } else\r\n                    System.out.println(map.getCurrentMap()[i][j].getLandType().getMapId());\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private String showDetails(int x , int y) {\r\n        String answer = \"LandType : \" ;\r\n        answer = answer.concat(map.getCurrentMap()[x][y].getLandType().values().toString());\r\n        if (map.getCurrentMap()[x][y].getBuilding() == null) {\r\n            //answer = answer.concat(\"\\n\" + map.getCurrentMap()[x][y].getBuilding().get().toString());\r\n        }\r\n        return answer ;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/mapMenuController.java b/src/main/java/org/example/controller/MapMenuController.java
++rename from src/main/java/org/example/controller/mapMenuController.java
++rename to src/main/java/org/example/controller/MapMenuController.java
++--- a/src/main/java/org/example/controller/mapMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/controller/MapMenuController.java	(date 1682258533849)
++@@ -2,6 +2,7 @@
++ import org.example.model.map;
++ import org.example.model.tile;
++ 
+++<<<<<<< HEAD:src/main/java/org/example/controller/mapMenuController.java
++ public class mapMenuController {
++     public mapMenuController() {
++     }
++@@ -44,6 +45,11 @@
++ 
++         }
++ 
+++=======
+++public class MapMenuController {
+++    private void setTexture(int x , int y,String type)
+++    {
+++>>>>>>> origin/mahdi:src/main/java/org/example/controller/MapMenuController.java
++ 
++     }
++ 
++Index: src/main/java/org/example/model/map.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/model/map.java b/src/main/java/org/example/model/gameData/map.java
++rename from src/main/java/org/example/model/map.java
++rename to src/main/java/org/example/model/gameData/map.java
++--- a/src/main/java/org/example/model/map.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/model/gameData/map.java	(date 1682258766528)
++@@ -1,11 +1,13 @@
++-package org.example.model;
+++package org.example.model.gameData;
+++
+++import org.example.model.tile;
++ 
++ import java.util.ArrayList;
++ 
++ public abstract class map {
++     int height;
++     int weight;
++-     public static tile [][] currentMap = new tile[200][200];
+++     public static tile[][] currentMap = new tile[200][200];
++ 
++ 
++     public static tile[][] getCurrentMap() {
++Index: src/main/java/org/example/controller/governmentController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/governmentController.java b/src/main/java/org/example/controller/governmentController.java
++deleted file mode 100644
++--- a/src/main/java/org/example/controller/governmentController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ /dev/null	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
++@@ -1,4 +0,0 @@
++-package org.example.controller;
++-
++-public class governmentController {
++-}
++Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_32_PM_[Changes]/shelved.patch
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_32_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_32_PM_[Changes]/shelved.patch
++new file mode 100644
++--- /dev/null	(date 1682258533555)
+++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_32_PM_[Changes]/shelved.patch	(date 1682258533555)
++@@ -0,0 +1,24 @@
+++Index: .idea/workspace.xml
+++IDEA additional info:
+++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"creating files...\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"raya-map2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OdNK38UNz2OrnIqCzmN0SMvyKl\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/uni/ap/src\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example.veiw.enums\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"\" />\r\n      <created>1681886432173</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681886432173</updated>\r\n      <workItem from=\"1681886433354\" duration=\"78000\" />\r\n      <workItem from=\"1681886686257\" duration=\"2512000\" />\r\n      <workItem from=\"1682084994720\" duration=\"4296000\" />\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۱\" summary=\"creating files...\">\r\n      <created>1681886768892</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <updated>1681886768892</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۲\" summary=\"creating files...\">\r\n      <created>1682085187908</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <updated>1682085187908</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۳\" summary=\"creating files...\">\r\n      <created>1682085989441</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <updated>1682085989441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"creating files...\">\r\n      <created>1682100710982</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100710982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"creating files...\">\r\n      <created>1682100873720</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100873720</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"raya-map\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"creating files...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"creating files...\" />\r\n  </component>\r\n</project>
+++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+++<+>UTF-8
+++===================================================================
+++diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+++--- a/.idea/workspace.xml	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
++++++ b/.idea/workspace.xml	(date 1682258423334)
+++@@ -6,13 +6,6 @@
+++   <component name="ChangeListManager">
+++     <list default="true" id="4908046b-a59d-480a-b0ae-14605eb14fdd" name="Changes" comment="creating files...">
+++       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/map.java" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" afterDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java" beforeDir="false" />
+++-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" afterDir="false" />
+++     </list>
+++     <option name="SHOW_DIALOG" value="false" />
+++     <option name="HIGHLIGHT_CONFLICTS" value="true" />
++Index: .idea/project-group-15.iml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/project-group-15.iml b/.idea/project-group-15.iml
++--- a/.idea/project-group-15.iml	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/.idea/project-group-15.iml	(date 1682258533842)
++@@ -1,12 +1,19 @@
++ <?xml version="1.0" encoding="UTF-8"?>
++-<module type="JAVA_MODULE" version="4">
++-  <component name="NewModuleRootManager" inherit-compiler-output="true">
++-    <exclude-output />
+++<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+++  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_19">
+++    <output url="file://$MODULE_DIR$/target/classes" />
+++    <output-test url="file://$MODULE_DIR$/target/test-classes" />
++     <content url="file://$MODULE_DIR$">
++       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
++-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="false" />
+++      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+++      <excludeFolder url="file://$MODULE_DIR$/target" />
++     </content>
++     <orderEntry type="inheritedJdk" />
++     <orderEntry type="sourceFolder" forTests="false" />
+++    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
+++    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+++    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
+++    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
+++    <orderEntry type="library" name="Maven: org.passay:passay:1.6.3" level="project" />
++   </component>
++ </module>
++\ No newline at end of file
++Index: src/main/java/org/example/controller/MapChangesMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/MapChangesMenuController.java b/src/main/java/org/example/controller/MapChangesMenuController.java
++new file mode 100644
++--- /dev/null	(date 1682258766533)
+++++ b/src/main/java/org/example/controller/MapChangesMenuController.java	(date 1682258766533)
++@@ -0,0 +1,49 @@
+++package org.example.controller;
+++import org.example.model.enums.LandType;
+++import org.example.model.gameData.map;
+++
+++public class MapChangesMenuController {
+++    private void setTexture(int x , int y,String type)
+++    {
+++        for(LandType l : LandType.values())
+++            if(l.equals(type)) {
+++             LandType  newLandType = l;
+++             map.findATile(x , y).setLandType(newLandType);
+++            }
+++
+++
+++    }
+++    private void setTexture(int x1, int y1,int x2, int y2,String type)
+++    {
+++
+++    }
+++    private void clear(int x , int y)
+++    {
+++        map.findATile(x ,y).setBuilding(null);
+++        map.findATile(x , y).setSoldier(null);
+++
+++
+++    }
+++    private void dropUnit(int x , int y, String type)
+++    {
+++        //TODO list of units should be added to make this method work
+++
+++    }
+++    private void dropBuilding(int x , int y , String type)
+++    {
+++
+++    }
+++    private void dropTree(int x , int y, String type)
+++    {
+++        // TODO the input string should be matched with the one in enum
+++        map.findATile(x , y).setTreeName(type);
+++
+++    }
+++    private void dropRock(int x , int y , char direction)
+++    {
+++        //TODO direction should be added
+++        map.findATile(x,y).setRock();
+++
+++    }
+++
+++}
++Index: src/main/java/org/example/controller/GovernmentController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/GovernmentController.java b/src/main/java/org/example/controller/GovernmentController.java
++new file mode 100644
++--- /dev/null	(date 1682258533845)
+++++ b/src/main/java/org/example/controller/GovernmentController.java	(date 1682258533845)
++@@ -0,0 +1,4 @@
+++package org.example.controller;
+++
+++public class GovernmentController {
+++}
++Index: .idea/misc.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/misc.xml b/.idea/misc.xml
++--- a/.idea/misc.xml	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/.idea/misc.xml	(date 1682258533842)
++@@ -1,5 +1,12 @@
++ <?xml version="1.0" encoding="UTF-8"?>
++ <project version="4">
+++  <component name="MavenProjectsManager">
+++    <option name="originalFiles">
+++      <list>
+++        <option value="$PROJECT_DIR$/pom.xml" />
+++      </list>
+++    </option>
+++  </component>
++   <component name="ProjectRootManager" version="2" project-jdk-name="19" project-jdk-type="JavaSDK">
++     <output url="file://$PROJECT_DIR$/out" />
++   </component>
++Index: src/main/java/org/example/view/GameMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.veiw;\r\n\r\npublic class GameMenu {\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/GameMenu.java b/src/main/java/org/example/view/GameMenu.java
++--- a/src/main/java/org/example/view/GameMenu.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/GameMenu.java	(date 1682258533854)
++@@ -1,4 +1,4 @@
++-package org.example.veiw;
+++package org.example.view;
++ 
++ public class GameMenu {
++ }
++Index: project.iml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/project.iml b/project.iml
++--- a/project.iml	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/project.iml	(date 1682258533845)
++@@ -5,6 +5,11 @@
++     <content url="file://$MODULE_DIR$">
++       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
++     </content>
+++    <dependency>
+++            <groupId>org.passay</groupId>
+++            <artifactId>passay</artifactId>
+++            <version>1.3.1</version>
+++    </dependency>
++     <orderEntry type="inheritedJdk" />
++     <orderEntry type="sourceFolder" forTests="false" />
++   </component>
++Index: src/main/java/org/example/view/MapChangesMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/MapChangesMenu.java b/src/main/java/org/example/view/MapChangesMenu.java
++new file mode 100644
++--- /dev/null	(date 1682258587952)
+++++ b/src/main/java/org/example/view/MapChangesMenu.java	(date 1682258587952)
++@@ -0,0 +1,37 @@
+++package org.example.view;
+++
+++public class MapChangesMenu {
+++    private void setTexture(int x , int y,String type)
+++    {
+++
+++    }
+++    private void setTexture(int x1, int y1,int x2, int y2,String type)
+++    {
+++
+++    }
+++    private void clear()
+++    {
+++
+++    }
+++    private void dropRock()
+++    {
+++    }
+++    private void dropUnit(int x , int y, String type)
+++    {
+++
+++    }
+++    private void dropBuilding(int x , int y)
+++    {
+++
+++    }
+++    private void dropTree(int x , int y, String type)
+++    {
+++
+++    }
+++    private void dropRock(int x , int y , char direction)
+++    {
+++
+++    }
+++
+++
+++}
++Index: src/main/java/org/example/controller/SignupMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.SignupMenuOutput;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class SignupMenuController extends MainMenuController{\r\n    public SignupMenuOutput signupUser() {\r\n        if (usernameCheck(this.getUsername())==null) {\r\n            if (passwordCheck(this.getPassword()) == null) {\r\n                if (emailCheck(this.getEmail())==null) {\r\n                    //TODO: doing user signing in ...\r\n                    return null;\r\n                }\r\n                return SignupMenuOutput.INVALID_EMAIL_FORMAT;\r\n            }\r\n            return SignupMenuOutput.INVALID_PASSWORD_FORMAT;\r\n        }\r\n        return SignupMenuOutput.INVALID_USERNAME_FORMAT;\r\n    }\r\n\r\n    public SignupMenuOutput usernameCheck(String username) {\r\n        if (username.matches(\"^\\\\w+$\")) {\r\n            //TODO: checking other users....\r\n            return null;\r\n        }\r\n        return SignupMenuOutput.INVALID_USERNAME_FORMAT;\r\n    }\r\n\r\n\r\n    public SignupMenuOutput passwordCheck(String password) {\r\n        if (password.length()>=6) {\r\n            if (password.matches(\"[a-z]+\")) {\r\n                if (password.matches(\"[A-Z]+\")) {\r\n                    if (password.matches(\"\\\\d+\")) {\r\n                        if (password.matches(\"[',!;?$^:\\\\\\\\/`|~&\\\" @#%*{}()\\\\[\\\\]<>_+.\\\\s=-]\")) {\r\n                            return null;\r\n                        }\r\n                        return SignupMenuOutput.ERROR_PASSWORD_NO_SPECIAL_CHARACTER;\r\n                    }\r\n                    return SignupMenuOutput.ERROR_PASSWORD_NO_DIGITS;\r\n                }\r\n                return SignupMenuOutput.ERROR_PASSWORD_NO_CAPITAL_CHARACTER;\r\n            }\r\n            return SignupMenuOutput.ERROR_PASSWORD_NO_SMALL_CHARACTER;\r\n        }\r\n        return SignupMenuOutput.ERROR_PASSWORD_IS_TOO_SHORT;\r\n    }\r\n\r\n    public SignupMenuOutput emailCheck(String email) {\r\n        if (email.matches(\"[\\\\w.]+@[\\\\w.]+\\\\.[\\\\w.]+\")) {\r\n            //TODO:checking other emails...\r\n            return null;\r\n        }\r\n        return SignupMenuOutput.INVALID_EMAIL_FORMAT;\r\n    }\r\n\r\n    public String generateRandomSlogan() {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public String generateRandomPassword() {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void securityQuestion() {\r\n        //TODO:\r\n        return;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/SignupMenuController.java b/src/main/java/org/example/controller/SignupMenuController.java
++--- a/src/main/java/org/example/controller/SignupMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/controller/SignupMenuController.java	(date 1682258533851)
++@@ -1,25 +1,26 @@
++ package org.example.controller;
++ 
+++
+++import org.example.model.User;
++ import org.example.view.enums.outputs.SignupMenuOutput;
++ 
++-import javax.swing.*;
++-
++ public class SignupMenuController extends MainMenuController{
++     public SignupMenuOutput signupUser() {
++-        if (usernameCheck(this.getUsername())==null) {
++-            if (passwordCheck(this.getPassword()) == null) {
++-                if (emailCheck(this.getEmail())==null) {
++-                    //TODO: doing user signing in ...
++-                    return null;
++-                }
++-                return SignupMenuOutput.INVALID_EMAIL_FORMAT;
++-            }
+++        if (usernameCheck(this.getUsername())!=null)
+++            return SignupMenuOutput.INVALID_USERNAME_FORMAT;
+++        if (emailCheck(this.getEmail())!=null)
+++            return SignupMenuOutput.INVALID_EMAIL_FORMAT;
+++        if (passwordCheck(this.getPassword())!=null)
++             return SignupMenuOutput.INVALID_PASSWORD_FORMAT;
+++        if (this.getPassword().matches("\\s*random\\s*")) {
+++            this.setClipBoard(generateRandomPassword());
+++            return SignupMenuOutput.STAND_BY;
++         }
++-        return SignupMenuOutput.INVALID_USERNAME_FORMAT;
+++        //TODO: completing later
+++        return null;
++     }
++ 
++-    public SignupMenuOutput usernameCheck(String username) {
+++    public static SignupMenuOutput usernameCheck(String username) {
++         if (username.matches("^\\w+$")) {
++             //TODO: checking other users....
++             return null;
++@@ -28,7 +29,7 @@
++     }
++ 
++ 
++-    public SignupMenuOutput passwordCheck(String password) {
+++    public static SignupMenuOutput passwordCheck(String password) {
++         if (password.length()>=6) {
++             if (password.matches("[a-z]+")) {
++                 if (password.matches("[A-Z]+")) {
++@@ -47,7 +48,7 @@
++         return SignupMenuOutput.ERROR_PASSWORD_IS_TOO_SHORT;
++     }
++ 
++-    public SignupMenuOutput emailCheck(String email) {
+++    public static SignupMenuOutput emailCheck(String email) {
++         if (email.matches("[\\w.]+@[\\w.]+\\.[\\w.]+")) {
++             //TODO:checking other emails...
++             return null;
++@@ -56,17 +57,30 @@
++     }
++ 
++     public String generateRandomSlogan() {
++-        //TODO:
+++        //TODO: uncompleted method!
++         return null;
++     }
++ 
++     public String generateRandomPassword() {
++-        //TODO:
++-        return null;
+++        String password = null;
+++        //TODO: generating strong password
+++        return password;
++     }
++ 
++     public void securityQuestion() {
++-        //TODO:
+++        //TODO: uncompleted method!
++         return;
++     }
+++
+++    public boolean randomPasswordVerification(String verification) {
+++        return verification.equals(this.getClipBoard());
+++    }
+++
+++    public void signingsComplete() {
+++        User newUser = new User(this.getUsername(), this.getPassword(), this.getNickname(), this.getEmail());
+++        if (this.getSlogan()!=null) {
+++            newUser.setSlogan(this.getSlogan());
+++        }
+++        newUser.addUser();
+++    }
++ }
++Index: src/main/java/org/example/view/LoginMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.LoginMenuController;\r\nimport org.example.controller.ProfileMenuController;\r\nimport org.example.view.enums.commands.LoginMenuEnum;\r\nimport org.example.view.enums.outputs.LoginMenuOutput;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class LoginMenu {\r\n    private final LoginMenuController loginMenuController = new ProfileMenuController();\r\n\r\n    public void run(InputScanner loginMenuScanner) {\r\n        Matcher loginMenuMatcher;\r\n        String userInput;\r\n        while (true) {\r\n            userInput = loginMenuScanner.getScanner().nextLine();\r\n            if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))\r\n                return;\r\n            //TODO: completing login menu...\r\n        }\r\n    }\r\n\r\n    public void loginInCheck(Matcher mainMenuMatcher) {\r\n        loginMenuController.setUsername(\"username\");\r\n        loginMenuController.setPassword(\"password\");\r\n        loginMenuController.setStayLoggedInFlag(mainMenuMatcher.group(\"stayLogged\") != null);\r\n        String message = loginMenuController.loginUser().getOutput();\r\n        if (message.equals(LoginMenuOutput.LOGGED_IN_SUCCESSFULY)) {\r\n            //TODO: about saving user in the game...\r\n            InputScanner loginMenuScanner = new InputScanner();\r\n            run(loginMenuScanner);\r\n        }\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/LoginMenu.java b/src/main/java/org/example/view/LoginMenu.java
++--- a/src/main/java/org/example/view/LoginMenu.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/LoginMenu.java	(date 1682258533854)
++@@ -4,12 +4,13 @@
++ import org.example.controller.LoginMenuController;
++ import org.example.controller.ProfileMenuController;
++ import org.example.view.enums.commands.LoginMenuEnum;
+++import org.example.view.enums.commands.ProfileMenuEnum;
++ import org.example.view.enums.outputs.LoginMenuOutput;
+++import org.example.view.enums.outputs.ProfileMenuOutput;
++ 
++-import java.util.Scanner;
++ import java.util.regex.Matcher;
++ 
++-public class LoginMenu {
+++public class LoginMenu extends MainMenu {
++     private final LoginMenuController loginMenuController = new ProfileMenuController();
++ 
++     public void run(InputScanner loginMenuScanner) {
++@@ -17,9 +18,32 @@
++         String userInput;
++         while (true) {
++             userInput = loginMenuScanner.getScanner().nextLine();
+++            ProfileMenu profileMenu = new ProfileMenu(loginMenuController);
++             if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))
++                 return;
++-            //TODO: completing login menu...
+++            else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_USERNAME))!=null) {
+++                profileMenu.changeUserUsername(loginMenuMatcher);
+++            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PASSWORD))!=null) {
+++                profileMenu.changeUserPassword(loginMenuMatcher);
+++            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_EMAIL))!=null) {
+++                profileMenu.changeUserEmail(loginMenuMatcher);
+++            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_NICKNAME))!=null) {
+++                profileMenu.changeUserNickname(loginMenuMatcher);
+++            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_SLOGAN))!=null) {
+++                profileMenu.changeUserSlogan(loginMenuMatcher);
+++            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.REMOVE_SLOGAN)!=null) {
+++                profileMenu.removeUserSlogan();
+++            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_PROFILE)!=null) {
+++                profileMenu.displayUserProfile();
+++            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_SLOGAN)!=null) {
+++                profileMenu.displayUserSlogan();
+++            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_RANK)!=null) {
+++                profileMenu.displayUserRank();
+++            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_PROFILE)!=null) {
+++                profileMenu.displayUserInfo();
+++            } else {
+++                System.out.println(ProfileMenuOutput.INVALID_COMMAND.getOutput());
+++            }
++         }
++     }
++ 
++Index: src/main/java/org/example/model/gameData/gameDataBase.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/model/gameData/gameDataBase.java b/src/main/java/org/example/model/gameData/gameDataBase.java
++new file mode 100644
++--- /dev/null	(date 1682258533853)
+++++ b/src/main/java/org/example/model/gameData/gameDataBase.java	(date 1682258533853)
++@@ -0,0 +1,4 @@
+++package org.example.model.gameData;
+++
+++public class gameDataBase {
+++}
++Index: src/main/java/org/example/model/User.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class User {\r\n    private String username;\r\n    private String password;\r\n    private String nickname;\r\n    private String email;\r\n    private String passRecoveryQuestion;\r\n    private String passRecoveryAnswer;\r\n    private int score;\r\n    private int rank;\r\n    private String slogan;\r\n    public static final ArrayList<User> allUsers = new ArrayList<>();\r\n\r\n    private void User(String username,String password,String nickname,String email){\r\n        this.username = username;\r\n        this.password = password;\r\n        this.nickname = nickname;\r\n        this.email = email;\r\n    }\r\n\r\n    private void User(String username,String password,String nickname,String email,String slogan){\r\n        this.username = username;\r\n        this.password = password;\r\n        this.nickname = nickname;\r\n        this.email = email;\r\n        this.slogan = slogan;\r\n        this.addUser();\r\n    }\r\n    public ArrayList<User> getAllUsers() {\r\n        return allUsers;\r\n    }\r\n    public void addUser() {\r\n        allUsers.add(this);\r\n    }\r\n    public void setRank(int rank) {\r\n        this.rank = rank;\r\n    }\r\n\r\n    public void setScore(int score) {\r\n        this.score = score;\r\n    }\r\n\r\n    public String getUsername(){\r\n        return this.username;\r\n    }\r\n\r\n    public String getPassword(){\r\n        return this.password;\r\n    }\r\n\r\n    public String getNickname(){\r\n        return this.nickname;\r\n    }\r\n\r\n    public String getEmail(){\r\n        return this.email;\r\n    }\r\n\r\n    public String getSlogan(){\r\n        return this.slogan;\r\n    }\r\n\r\n    public int getRank(){\r\n        return this.rank;\r\n    }\r\n\r\n    public int getScore(){\r\n        return this.score;\r\n    }\r\n\r\n    public void setPassword(String password){\r\n        this.password = password;\r\n    }\r\n\r\n    public void setUsername(String username){\r\n        this.username = username;\r\n    }\r\n\r\n    public void setNickname(String nickname){\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public void setEmail(String email){\r\n        this.email = email;\r\n    }\r\n\r\n    public void setSlogan(String slogan){\r\n        this.slogan = slogan;\r\n    }\r\n\r\n    public void setPassRecoveryQuestion(String passRecoveryQuestion){\r\n        this.passRecoveryQuestion = passRecoveryQuestion;\r\n    }\r\n\r\n    public void setPassRecoveryAnswer(String passRecoveryAnswer){\r\n        this.passRecoveryAnswer = passRecoveryAnswer;\r\n    }\r\n\r\n    public String getPassRecoveryQuestion(){\r\n        return this.passRecoveryQuestion;\r\n    }\r\n\r\n    public String getPassRecoveryAnswer(){\r\n        return this.passRecoveryAnswer;\r\n    }\r\n\r\n    public static User findUserWithPass(String password) {\r\n        for (User user:User.allUsers) {\r\n            if (user.getPassword().equals(password))\r\n                return user;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/model/User.java b/src/main/java/org/example/model/User.java
++--- a/src/main/java/org/example/model/User.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/model/User.java	(date 1682258533851)
++@@ -14,14 +14,15 @@
++     private String slogan;
++     public static final ArrayList<User> allUsers = new ArrayList<>();
++ 
++-    private void User(String username,String password,String nickname,String email){
+++    public User(String username, String password, String nickname, String email) {
++         this.username = username;
++         this.password = password;
++         this.nickname = nickname;
++         this.email = email;
+++        this.addUser();
++     }
++ 
++-    private void User(String username,String password,String nickname,String email,String slogan){
+++    public User(String username, String password, String nickname, String email, String slogan) {
++         this.username = username;
++         this.password = password;
++         this.nickname = nickname;
++@@ -29,12 +30,15 @@
++         this.slogan = slogan;
++         this.addUser();
++     }
+++
++     public ArrayList<User> getAllUsers() {
++         return allUsers;
++     }
+++
++     public void addUser() {
++         allUsers.add(this);
++     }
+++
++     public void setRank(int rank) {
++         this.rank = rank;
++     }
++@@ -43,72 +47,72 @@
++         this.score = score;
++     }
++ 
++-    public String getUsername(){
+++    public String getUsername() {
++         return this.username;
++     }
++ 
++-    public String getPassword(){
+++    public String getPassword() {
++         return this.password;
++     }
++ 
++-    public String getNickname(){
+++    public String getNickname() {
++         return this.nickname;
++     }
++ 
++-    public String getEmail(){
+++    public String getEmail() {
++         return this.email;
++     }
++ 
++-    public String getSlogan(){
+++    public String getSlogan() {
++         return this.slogan;
++     }
++ 
++-    public int getRank(){
+++    public int getRank() {
++         return this.rank;
++     }
++ 
++-    public int getScore(){
+++    public int getScore() {
++         return this.score;
++     }
++ 
++-    public void setPassword(String password){
+++    public void setPassword(String password) {
++         this.password = password;
++     }
++ 
++-    public void setUsername(String username){
+++    public void setUsername(String username) {
++         this.username = username;
++     }
++ 
++-    public void setNickname(String nickname){
+++    public void setNickname(String nickname) {
++         this.nickname = nickname;
++     }
++ 
++-    public void setEmail(String email){
+++    public void setEmail(String email) {
++         this.email = email;
++     }
++ 
++-    public void setSlogan(String slogan){
+++    public void setSlogan(String slogan) {
++         this.slogan = slogan;
++     }
++ 
++-    public void setPassRecoveryQuestion(String passRecoveryQuestion){
+++    public void setPassRecoveryQuestion(String passRecoveryQuestion) {
++         this.passRecoveryQuestion = passRecoveryQuestion;
++     }
++ 
++-    public void setPassRecoveryAnswer(String passRecoveryAnswer){
+++    public void setPassRecoveryAnswer(String passRecoveryAnswer) {
++         this.passRecoveryAnswer = passRecoveryAnswer;
++     }
++ 
++-    public String getPassRecoveryQuestion(){
+++    public String getPassRecoveryQuestion() {
++         return this.passRecoveryQuestion;
++     }
++ 
++-    public String getPassRecoveryAnswer(){
+++    public String getPassRecoveryAnswer() {
++         return this.passRecoveryAnswer;
++     }
++ 
++     public static User findUserWithPass(String password) {
++-        for (User user:User.allUsers) {
+++        for (User user : User.allUsers) {
++             if (user.getPassword().equals(password))
++                 return user;
++         }
++Index: src/main/java/org/example/controller/MainMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.controller;\r\n\r\npublic class MainMenuController {\r\n    private String username;\r\n    private String password;\r\n    private String nickname;\r\n    private String slogan;\r\n    private String email;\r\n\r\n    public MainMenuController() {\r\n        this.username = null;\r\n        this.password = null;\r\n        this.nickname = null;\r\n        this.slogan = null;\r\n        this.email = null;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public String getSlogan() {\r\n        return slogan;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public void setSlogan(String slogan) {\r\n        this.slogan = slogan;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/MainMenuController.java b/src/main/java/org/example/controller/MainMenuController.java
++--- a/src/main/java/org/example/controller/MainMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/controller/MainMenuController.java	(date 1682258533847)
++@@ -6,6 +6,8 @@
++     private String nickname;
++     private String slogan;
++     private String email;
+++    private String clipBoard;
+++
++ 
++     public MainMenuController() {
++         this.username = null;
++@@ -13,6 +15,15 @@
++         this.nickname = null;
++         this.slogan = null;
++         this.email = null;
+++        this.clipBoard = null;
+++    }
+++
+++    public String getClipBoard() {
+++        return clipBoard;
+++    }
+++
+++    public void setClipBoard(String clipBoard) {
+++        this.clipBoard = clipBoard;
++     }
++ 
++     public String getUsername() {
++Index: src/main/java/org/example/view/MainMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.MainMenuController;\r\nimport org.example.view.enums.commands.LoginMenuEnum;\r\nimport org.example.view.enums.commands.SignupMenuEnum;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class MainMenu {\r\n    private MainMenuController mainMenuController = new MainMenuController();\r\n    public void run() {\r\n        InputScanner mainMenuScanner = new InputScanner();\r\n        Matcher mainMenuMatcher;\r\n        String userInput;\r\n        while (true) {\r\n            userInput = mainMenuScanner.getScanner().nextLine();\r\n            if (userInput.matches(\"\\\\s*exit\\\\s*\"))\r\n                return;\r\n            else if ((mainMenuMatcher = SignupMenuEnum.getMatcher(userInput, SignupMenuEnum.USER_CREATION))!=null) {\r\n                new SignupMenu().checkSigningUp(mainMenuMatcher);\r\n            } else if ((mainMenuMatcher = LoginMenuEnum.getMatcher(userInput, LoginMenuEnum.USER_LOGIN))!=null) {\r\n                new LoginMenu().loginInCheck(mainMenuMatcher);\r\n            }\r\n        }\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/MainMenu.java b/src/main/java/org/example/view/MainMenu.java
++--- a/src/main/java/org/example/view/MainMenu.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/MainMenu.java	(date 1682258533855)
++@@ -5,6 +5,7 @@
++ import org.example.view.enums.commands.LoginMenuEnum;
++ import org.example.view.enums.commands.SignupMenuEnum;
++ 
+++import javax.swing.*;
++ import java.util.regex.Matcher;
++ 
++ public class MainMenu {
++@@ -21,6 +22,8 @@
++                 new SignupMenu().checkSigningUp(mainMenuMatcher);
++             } else if ((mainMenuMatcher = LoginMenuEnum.getMatcher(userInput, LoginMenuEnum.USER_LOGIN))!=null) {
++                 new LoginMenu().loginInCheck(mainMenuMatcher);
+++            } else if (SignupMenuEnum.getMatcher(userInput,SignupMenuEnum.CAREATE_MAP)!=null) {
+++                new MapMenu().enterMapEnvironmentSettings();
++             }
++         }
++     }
++Index: src/main/java/org/example/controller/LoginMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.LoginMenuOutput;\r\n\r\npublic class LoginMenuController extends MainMenuController{\r\n    private boolean stayLoggedInFlag = false;\r\n\r\n    public LoginMenuOutput loginUser() {\r\n        if (checkMatchUsername(this.getUsername())) {\r\n            if (checkUsernameWithPassword(this.getUsername(),this.getPassword())) {\r\n                //TODO: later...\r\n                return LoginMenuOutput.LOGGED_IN_SUCCESSFULY;\r\n            }\r\n            return LoginMenuOutput.USER_AND_PASS_MATCH_ERROR;\r\n        }\r\n        return LoginMenuOutput.USER_DOES_NOT_EXIST;\r\n    }\r\n\r\n    public boolean checkMatchUsername(String username) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public boolean checkUsernameWithPassword(String username,String password) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public boolean checkSecurityQuestion(String answer) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public LoginMenuOutput forgetPassword(String username) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void logoutUser() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void captcha() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public boolean isStayLoggedInFlag() {\r\n        return stayLoggedInFlag;\r\n    }\r\n\r\n    public void setStayLoggedInFlag(boolean stayLoggedInFlag) {\r\n        this.stayLoggedInFlag = stayLoggedInFlag;\r\n    }\r\n}\r\n\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/LoginMenuController.java b/src/main/java/org/example/controller/LoginMenuController.java
++--- a/src/main/java/org/example/controller/LoginMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/controller/LoginMenuController.java	(date 1682258533846)
++@@ -1,5 +1,6 @@
++ package org.example.controller;
++ 
+++import org.example.model.User;
++ import org.example.view.enums.outputs.LoginMenuOutput;
++ 
++ public class LoginMenuController extends MainMenuController{
++@@ -17,13 +18,22 @@
++     }
++ 
++     public boolean checkMatchUsername(String username) {
++-        //TODO:
++-        return true;
+++        for (User user:User.allUsers) {
+++            if (user.getUsername().equals(username))
+++                return true;
+++        }
+++        return false;
++     }
++ 
++     public boolean checkUsernameWithPassword(String username,String password) {
++-        //TODO:
++-        return true;
+++        for (User user:User.allUsers) {
+++            if (user.getUsername().equals(username)) {
+++                if (user.getPassword().equals(password)) {
+++                    return true;
+++                }
+++            }
+++        }
+++        return false;
++     }
++ 
++     public boolean checkSecurityQuestion(String answer) {
++Index: src/main/java/org/example/model/Government.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/model/Government.java b/src/main/java/org/example/model/gameData/Government.java
++rename from src/main/java/org/example/model/Government.java
++rename to src/main/java/org/example/model/gameData/Government.java
++--- a/src/main/java/org/example/model/Government.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/model/gameData/Government.java	(date 1682258533853)
++@@ -1,4 +1,4 @@
++-package org.example.model;
+++package org.example.model.gameData;
++ 
++ import org.example.model.enums.products;
++ 
++Index: src/main/java/org/example/controller/ProfileMenuController.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.ProfileMenuOutput;\r\n\r\npublic class ProfileMenuController extends LoginMenuController{\r\n    public ProfileMenuOutput changeUsername(String username) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeNickname(String nickname) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changePassword(String password) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeEmail(String email) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeSlogan(String slogan) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void removeSlogan() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserHighestScore() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserRank() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserSlogan() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserProfileDisplay() {\r\n        //TODO:\r\n        return;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/controller/ProfileMenuController.java b/src/main/java/org/example/controller/ProfileMenuController.java
++--- a/src/main/java/org/example/controller/ProfileMenuController.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/controller/ProfileMenuController.java	(date 1682258533850)
++@@ -1,55 +1,87 @@
++ package org.example.controller;
++ 
+++import org.example.model.User;
++ import org.example.view.enums.outputs.ProfileMenuOutput;
++ 
+++
++ public class ProfileMenuController extends LoginMenuController{
++     public ProfileMenuOutput changeUsername(String username) {
++-        //TODO:
++-        return null;
+++        if (SignupMenuController.usernameCheck(username)==null) {
+++            for (User user:User.allUsers) {
+++                if (user.getUsername().equals(this.getUsername())) {
+++                    user.setUsername(username);
+++                    this.setUsername(username);
+++                    return ProfileMenuOutput.USERNAME_CHANGED_SUCCESSFULLY;
+++                }
+++            }
+++        }
+++        return ProfileMenuOutput.INVALID_NEW_USERNAME;
++     }
++ 
++     public ProfileMenuOutput changeNickname(String nickname) {
++-        //TODO:
++-        return null;
+++        User.findUserWithPass(this.getPassword()).setNickname(nickname);
+++        this.setNickname(nickname);
+++        return ProfileMenuOutput.NICKNAME_CHANGED_SUCCESSFULLY;
++     }
++ 
++-    public ProfileMenuOutput changePassword(String password) {
++-        //TODO:
++-        return null;
+++    public ProfileMenuOutput changePassword(String oldPass,String newPass) {
+++        if (this.getPassword().equals(oldPass)) {
+++            if (!oldPass.equals(newPass)) {
+++                if (SignupMenuController.passwordCheck(newPass)==null) {
+++                    User.findUserWithPass(oldPass).setPassword(newPass);
+++                    this.setPassword(newPass);
+++                    return ProfileMenuOutput.PASSWORD_CHANGED_SUCCESSFULLY;
+++                }
+++                return ProfileMenuOutput.INVALID_NEW_PASSWORD;
+++            }
+++            return ProfileMenuOutput.NEWPASS_AND_OLDPASS_ARE_EQUALS;
+++        }
+++        return ProfileMenuOutput.INVALID_CURRENT_PASSWORD;
++     }
++ 
++     public ProfileMenuOutput changeEmail(String email) {
++-        //TODO:
++-        return null;
+++        if (SignupMenuController.emailCheck(email)==null) {
+++            User.findUserWithPass(this.getPassword()).setEmail(email);
+++            this.setEmail(email);
+++            return ProfileMenuOutput.EMAIL_CHANGED_SUCCESSFULLY;
+++        }
+++        return ProfileMenuOutput.INVALID_NEW_EMAIL;
++     }
++ 
++     public ProfileMenuOutput changeSlogan(String slogan) {
++-        //TODO:
++-        return null;
+++        User.findUserWithPass(this.getPassword()).setSlogan(slogan);
+++        this.setSlogan(slogan);
+++        return ProfileMenuOutput.SLOGAN_CHANGED_SUCCESSFULLY;
++     }
++ 
++-    public void removeSlogan() {
++-        //TODO:
++-        return;
+++    public ProfileMenuOutput removeSlogan() {
+++        User.findUserWithPass(this.getPassword()).setSlogan(null);
+++        this.setSlogan(null);
+++        return ProfileMenuOutput.SLOGAN_REMOVED_SUCCESSFULLY;
++     }
++ 
++     public void showUserHighestScore() {
++-        //TODO:
++-        return;
+++        //TODO: after completing other parts!
++     }
++ 
++     public void showUserRank() {
++-        //TODO:
++-        return;
+++        //TODO: after completing other parts!
++     }
++ 
++     public void showUserSlogan() {
++-        //TODO:
++-        return;
+++        System.out.println(this.getSlogan());
++     }
++ 
++     public void showUserProfileDisplay() {
++-        //TODO:
++-        return;
+++        System.out.println("username:"+this.getUsername());
+++        StringBuilder password = new StringBuilder("*");
+++        for (int i=1;i<this.getPassword().length();i++) {
+++            password.append("*");
+++        }
+++        System.out.println("password:"+password);
+++        System.out.println("email:"+this.getEmail());
+++        System.out.println("nickname:"+this.getNickname());
+++        System.out.println("slogan:"+this.getSlogan());
+++        //TODO:user rank and high score are left..
++     }
++ }
++Index: .idea/encodings.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/encodings.xml b/.idea/encodings.xml
++new file mode 100644
++--- /dev/null	(date 1682258533841)
+++++ b/.idea/encodings.xml	(date 1682258533841)
++@@ -0,0 +1,7 @@
+++<?xml version="1.0" encoding="UTF-8"?>
+++<project version="4">
+++  <component name="Encoding">
+++    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+++    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+++  </component>
+++</project>
++\ No newline at end of file
++Index: src/main/java/org/example/view/SignupMenu.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view;\r\n\r\n\r\n\r\nimport org.example.controller.SignupMenuController;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class SignupMenu extends MainMenu{\r\n    private final SignupMenuController signupMenuController = new SignupMenuController();\r\n    public void checkSigningUp(Matcher matcher) {\r\n        signupMenuController.setUsername(matcher.group(\"username\"));\r\n        signupMenuController.setPassword(matcher.group(\"password\"));\r\n        signupMenuController.setNickname(matcher.group(\"nickname\"));\r\n        signupMenuController.setEmail(matcher.group(\"email\"));\r\n        signupMenuController.setSlogan(matcher.group(\"slogan\"));\r\n        System.out.println(signupMenuController.signupUser());\r\n    }\r\n\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/SignupMenu.java b/src/main/java/org/example/view/SignupMenu.java
++--- a/src/main/java/org/example/view/SignupMenu.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/SignupMenu.java	(date 1682258533857)
++@@ -3,6 +3,7 @@
++ 
++ 
++ import org.example.controller.SignupMenuController;
+++import org.example.view.enums.outputs.SignupMenuOutput;
++ 
++ import java.util.regex.Matcher;
++ 
++@@ -14,6 +15,22 @@
++         signupMenuController.setNickname(matcher.group("nickname"));
++         signupMenuController.setEmail(matcher.group("email"));
++         signupMenuController.setSlogan(matcher.group("slogan"));
+++        String message = signupMenuController.signupUser().getOutput();
+++        if (message.equals(SignupMenuOutput.STAND_BY.getOutput())) {
+++            System.out.println("you password is: "+signupMenuController.getClipBoard());
+++            String verification = null;
+++            while (true) {
+++                System.out.println("re-enter your password please: ");
+++                if (signupMenuController.randomPasswordVerification(verification)) {
+++                    signupMenuController.signingsComplete();
+++                    return;
+++                } else if (verification.matches("^\\s*quit\\s*$")) {
+++                    return;
+++                } else {
+++                    System.out.println("doesn't matched to the password!,\n try again! or enter \"quit\" to exit");
+++                }
+++            }
+++        }
++         System.out.println(signupMenuController.signupUser());
++     }
++ 
++Index: src/main/java/org/example/model/mapTemplates.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/model/mapTemplates.java b/src/main/java/org/example/model/gameData/mapTemplates.java
++rename from src/main/java/org/example/model/mapTemplates.java
++rename to src/main/java/org/example/model/gameData/mapTemplates.java
++--- a/src/main/java/org/example/model/mapTemplates.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/model/gameData/mapTemplates.java	(date 1682258533854)
++@@ -1,4 +1,4 @@
++-package org.example.model;
+++package org.example.model.gameData;
++ 
++ public class mapTemplates {
++     //TODO : map ready templates should be made and saved hear
++Index: src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view.enums.outputs;\r\n\r\npublic enum ProfileMenuOutput {\r\n    USERNAME_CHANGED_SUCCESSFULLY(\"username changed successfully!\"),\r\n    PASSWORD_CHANGED_SUCCESSFULLY(\"password changed successfully!\"),\r\n    NICKNAME_CHANGED_SUCCESSFULLY(\"nickname changed successfully!\"),\r\n    EMAIL_CHANGED_SUCCESSFULLY(\"email changed successfully!\"),\r\n    SLOGAN_CHANGED_SUCCESSFULLY(\"slogan changed successfully!\"),\r\n\r\n    NEWPASS_AND_OLDPASS_ARE_EQUALS(\"your new password is equal to your current password!,\\ntry something else!\"),\r\n    INVALID_CURRENT_PASSWORD(\"Current password is incorrect!\"),\r\n    INVALID_NEW_PASSWORD(\"Please enter a new password!\"),\r\n    INVALID_NEW_USERNAME(\"you entered invalid format of username!,\\ntry again!\"),\r\n    INVALID_NEW_NICKNAME(\"you entered invalid format of nickname!,\\ntry again!\"),\r\n    INVALID_NEW_EMAIL(\"you entered invalid format of email!,\\ntry again!\"),\r\n    INVALID_COMMAND(\"you entered invalid command!,\\nenter \\\"game --help\\\" for hint!\"),\r\n\r\n    ;\r\n    private final String output;\r\n\r\n    public String getOutput() {\r\n        return output;\r\n    }\r\n\r\n    ProfileMenuOutput(String output) {\r\n        this.output = output;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java b/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java
++--- a/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java	(date 1682258533858)
++@@ -6,6 +6,7 @@
++     NICKNAME_CHANGED_SUCCESSFULLY("nickname changed successfully!"),
++     EMAIL_CHANGED_SUCCESSFULLY("email changed successfully!"),
++     SLOGAN_CHANGED_SUCCESSFULLY("slogan changed successfully!"),
+++    SLOGAN_REMOVED_SUCCESSFULLY("slogan removed successfully!"),
++ 
++     NEWPASS_AND_OLDPASS_ARE_EQUALS("your new password is equal to your current password!,\ntry something else!"),
++     INVALID_CURRENT_PASSWORD("Current password is incorrect!"),
++Index: .idea/jarRepositories.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
++new file mode 100644
++--- /dev/null	(date 1682258533841)
+++++ b/.idea/jarRepositories.xml	(date 1682258533841)
++@@ -0,0 +1,20 @@
+++<?xml version="1.0" encoding="UTF-8"?>
+++<project version="4">
+++  <component name="RemoteRepositoriesConfiguration">
+++    <remote-repository>
+++      <option name="id" value="central" />
+++      <option name="name" value="Central Repository" />
+++      <option name="url" value="https://repo.maven.apache.org/maven2" />
+++    </remote-repository>
+++    <remote-repository>
+++      <option name="id" value="central" />
+++      <option name="name" value="Maven Central repository" />
+++      <option name="url" value="https://repo1.maven.org/maven2" />
+++    </remote-repository>
+++    <remote-repository>
+++      <option name="id" value="jboss.community" />
+++      <option name="name" value="JBoss Community repository" />
+++      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+++    </remote-repository>
+++  </component>
+++</project>
++\ No newline at end of file
++Index: .idea/compiler.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/compiler.xml b/.idea/compiler.xml
++new file mode 100644
++--- /dev/null	(date 1682258533841)
+++++ b/.idea/compiler.xml	(date 1682258533841)
++@@ -0,0 +1,16 @@
+++<?xml version="1.0" encoding="UTF-8"?>
+++<project version="4">
+++  <component name="CompilerConfiguration">
+++    <annotationProcessing>
+++      <profile name="Maven default annotation processors profile" enabled="true">
+++        <sourceOutputDir name="target/generated-sources/annotations" />
+++        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+++        <outputRelativeToContentRoot value="true" />
+++        <module name="project-group-15" />
+++      </profile>
+++    </annotationProcessing>
+++    <bytecodeTargetLevel>
+++      <module name="project-group-15" target="19" />
+++    </bytecodeTargetLevel>
+++  </component>
+++</project>
++\ No newline at end of file
++Index: pom.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/pom.xml b/pom.xml
++new file mode 100644
++--- /dev/null	(date 1682258533844)
+++++ b/pom.xml	(date 1682258533844)
++@@ -0,0 +1,34 @@
+++<?xml version="1.0" encoding="UTF-8"?>
+++<project xmlns="http://maven.apache.org/POM/4.0.0"
+++         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+++         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+++    <modelVersion>4.0.0</modelVersion>
+++
+++    <groupId>org.example</groupId>
+++    <artifactId>untitled</artifactId>
+++    <version>1.0-SNAPSHOT</version>
+++    <dependencies>
+++        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
+++        <dependency>
+++            <groupId>org.junit.jupiter</groupId>
+++            <artifactId>junit-jupiter-api</artifactId>
+++            <version>5.9.2</version>
+++            <scope>test</scope>
+++        </dependency>
+++        <!-- https://mvnrepository.com/artifact/org.passay/passay -->
+++        <dependency>
+++            <groupId>org.passay</groupId>
+++            <artifactId>passay</artifactId>
+++            <version>1.6.3</version>
+++        </dependency>
+++
+++    </dependencies>
+++
+++
+++    <properties>
+++        <maven.compiler.source>19</maven.compiler.source>
+++        <maven.compiler.target>19</maven.compiler.target>
+++        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+++    </properties>
+++
+++</project>
++\ No newline at end of file
++Index: .idea/libraries/Maven__org_passay_passay_1_6_3.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/libraries/Maven__org_passay_passay_1_6_3.xml b/.idea/libraries/Maven__org_passay_passay_1_6_3.xml
++new file mode 100644
++--- /dev/null	(date 1682258533841)
+++++ b/.idea/libraries/Maven__org_passay_passay_1_6_3.xml	(date 1682258533841)
++@@ -0,0 +1,13 @@
+++<component name="libraryTable">
+++  <library name="Maven: org.passay:passay:1.6.3">
+++    <CLASSES>
+++      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3.jar!/" />
+++    </CLASSES>
+++    <JAVADOC>
+++      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3-javadoc.jar!/" />
+++    </JAVADOC>
+++    <SOURCES>
+++      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3-sources.jar!/" />
+++    </SOURCES>
+++  </library>
+++</component>
++\ No newline at end of file
++Index: src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view.enums.outputs;\r\n\r\npublic enum SignupMenuOutput {\r\n    EMPTY_FIELD(\"you just missed some fields,\\ntry again!\"),\r\n    INVALID_USERNAME_FORMAT(\"username format is invalid!,\\ntry again!\"),\r\n    INVALID_PASSWORD_FORMAT(\"password format is invalid!,\\ntry something else...\"),\r\n    ERROR_PASSWORD_IS_TOO_SHORT(\"your password is too short!: your password must contain at least 6 characters!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_CAPITAL_CHARACTER(\"invalid password format!: your password must contain at least 1 capital alphabet!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_SMALL_CHARACTER(\"invalid password format!: your password must contain at least 1 small alphabet!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_DIGITS(\"invalid password format!: your password must contain at least 1 digits!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_SPECIAL_CHARACTER(\"invalid password format!: your password must contain at least 1 special character!,\\ntry again!\"),\r\n    USERNAME_EXISTS(\"you can't user this username because it already exists!,\\n try something else...\"),\r\n    WEAK_PASSWORD(\"your password is weak!,\\ntry something harder or user \\\"random password\\\"\"),\r\n    USER_AND_PASS_MATCH_ERROR(\"your password is incorrect,\\nenter the correct password or try \\\"forget password\\\"\"),\r\n    DUPLICATE_EMAIL_ERROR(\"a user with this email already exists,\\n enter unique email please!\"),\r\n    INVALID_EMAIL_FORMAT(\"email format is invalid!,\\ntry again!\"),\r\n\r\n\r\n    ;\r\n    private final String output;\r\n\r\n    public String getOutput() {\r\n        return output;\r\n    }\r\n\r\n    SignupMenuOutput(String output) {\r\n        this.output = output;\r\n    }\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java b/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java
++--- a/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java	(date 1682258533860)
++@@ -9,6 +9,7 @@
++     ERROR_PASSWORD_NO_SMALL_CHARACTER("invalid password format!: your password must contain at least 1 small alphabet!,\ntry again!"),
++     ERROR_PASSWORD_NO_DIGITS("invalid password format!: your password must contain at least 1 digits!,\ntry again!"),
++     ERROR_PASSWORD_NO_SPECIAL_CHARACTER("invalid password format!: your password must contain at least 1 special character!,\ntry again!"),
+++    STAND_BY("standing by"),
++     USERNAME_EXISTS("you can't user this username because it already exists!,\n try something else..."),
++     WEAK_PASSWORD("your password is weak!,\ntry something harder or user \"random password\""),
++     USER_AND_PASS_MATCH_ERROR("your password is incorrect,\nenter the correct password or try \"forget password\""),
++Index: src/main/java/org/example/view/enums/commands/SignupMenuEnum.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package org.example.view.enums.commands;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic enum SignupMenuEnum {\r\n    USER_CREATION(\"^user\\\\s+create\\\\s+((-u\\\\s+(?<username>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(\\\\s*-p\\\\s+(?<password>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s+(?<configuration>)[^\\\\\\\"]\\\\S*|\" +\r\n            \"\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*|(-e\\\\s+(?<email>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(-n\\\\s+(?<nickname>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(-s\\\\s+(?<slogan>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*))+$\"),\r\n    PICK_QUESTION(\"^\\\\s*question\\\\s*pick\\\\s*\"),\r\n\r\n    ;\r\n\r\n    private final String regex;\r\n\r\n    SignupMenuEnum(String regex) {\r\n        this.regex = regex;\r\n    }\r\n\r\n    public String getRegex() {\r\n        return regex;\r\n    }\r\n\r\n    public static Matcher getMatcher(String input, SignupMenuEnum regex) {\r\n        Matcher matcher = Pattern.compile(regex.getRegex(), Pattern.CASE_INSENSITIVE).matcher(input);\r\n        return matcher.matches() ? matcher : null;\r\n    }\r\n\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java b/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java
++--- a/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java	(date 1682258533857)
++@@ -10,6 +10,7 @@
++             "(-n\\s+(?<nickname>[^\\\"]\\S*|\\\"[^\\\"]+\\\")\\s*)|" +
++             "(-s\\s+(?<slogan>[^\\\"]\\S*|\\\"[^\\\"]+\\\")\\s*))+$"),
++     PICK_QUESTION("^\\s*question\\s*pick\\s*"),
+++    CAREATE_MAP("^\\s*create\\s+map\\s*$"),
++ 
++     ;
++ 
++Index: .idea/workspace.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"creating files...\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"raya-map2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OdNK38UNz2OrnIqCzmN0SMvyKl\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/uni/ap/src\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example.veiw.enums\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"\" />\r\n      <created>1681886432173</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681886432173</updated>\r\n      <workItem from=\"1681886433354\" duration=\"78000\" />\r\n      <workItem from=\"1681886686257\" duration=\"2512000\" />\r\n      <workItem from=\"1682084994720\" duration=\"4296000\" />\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۱\" summary=\"creating files...\">\r\n      <created>1681886768892</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <updated>1681886768892</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۲\" summary=\"creating files...\">\r\n      <created>1682085187908</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <updated>1682085187908</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۳\" summary=\"creating files...\">\r\n      <created>1682085989441</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <updated>1682085989441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"creating files...\">\r\n      <created>1682100710982</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100710982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"creating files...\">\r\n      <created>1682100873720</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100873720</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"raya-map\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"creating files...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"creating files...\" />\r\n  </component>\r\n</project>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/workspace.xml b/.idea/workspace.xml
++--- a/.idea/workspace.xml	(revision 385d363f85b42b9b7273c2b08a18ef331be0cf93)
+++++ b/.idea/workspace.xml	(date 1682258533844)
++@@ -4,6 +4,7 @@
++     <option name="autoReloadType" value="SELECTIVE" />
++   </component>
++   <component name="ChangeListManager">
+++<<<<<<< HEAD
++     <list default="true" id="4908046b-a59d-480a-b0ae-14605eb14fdd" name="Changes" comment="creating files...">
++       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
++@@ -13,6 +14,24 @@
++       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" afterDir="false" />
++       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java" beforeDir="false" />
++       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" afterDir="false" />
+++=======
+++    <list default="true" id="4908046b-a59d-480a-b0ae-14605eb14fdd" name="Changes" comment="adding something to login menu">
+++      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+++      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+++      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml" beforeDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml" beforeDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml" beforeDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml" beforeDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/project-group-15.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/project-group-15.iml" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenuController.java" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/SignupMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/SignupMenuController.java" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/SignupMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/SignupMenu.java" afterDir="false" />
+++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java" afterDir="false" />
+++>>>>>>> origin/mahdi
++     </list>
++     <option name="SHOW_DIALOG" value="false" />
++     <option name="HIGHLIGHT_CONFLICTS" value="true" />
++@@ -22,7 +41,6 @@
++   <component name="FileTemplateManagerImpl">
++     <option name="RECENT_TEMPLATES">
++       <list>
++-        <option value="Enum" />
++         <option value="Class" />
++       </list>
++     </option>
++@@ -30,14 +48,28 @@
++   <component name="Git.Settings">
++     <option name="RECENT_BRANCH_BY_REPOSITORY">
++       <map>
+++<<<<<<< HEAD
++         <entry key="$PROJECT_DIR$" value="raya-map2" />
++       </map>
++     </option>
++     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
++     <option name="UPDATE_TYPE" value="REBASE" />
+++=======
+++        <entry key="$PROJECT_DIR$" value="main" />
+++      </map>
+++    </option>
+++    <option name="SWAP_SIDES_IN_COMPARE_BRANCHES" value="true" />
+++>>>>>>> origin/mahdi
++   </component>
++   <component name="MarkdownSettingsMigration">
++     <option name="stateVersion" value="1" />
+++  </component>
+++  <component name="MavenImportPreferences">
+++    <option name="generalSettings">
+++      <MavenGeneralSettings>
+++        <option name="useMavenConfig" value="true" />
+++      </MavenGeneralSettings>
+++    </option>
++   </component>
++   <component name="ProjectId" id="2OdNK38UNz2OrnIqCzmN0SMvyKl" />
++   <component name="ProjectViewState">
++@@ -50,21 +82,26 @@
++     "RunOnceActivity.ShowReadmeOnStart": "true",
++     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
++     "WebServerToolWindowFactoryState": "false",
+++<<<<<<< HEAD
++     "last_opened_file_path": "D:/uni/ap/src",
+++=======
+++    "last_opened_file_path": "C:/Users/mahdi.ak/Desktop/Term2/java/project-group-15",
+++>>>>>>> origin/mahdi
++     "node.js.detected.package.eslint": "true",
++     "node.js.detected.package.tslint": "true",
++     "node.js.selected.package.eslint": "(autodetect)",
++     "node.js.selected.package.tslint": "(autodetect)",
++     "nodejs_package_manager_path": "npm",
++-    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
+++    "settings.editor.selected.configurable": "diff.external",
++     "vue.rearranger.settings.migration": "true"
+++  },
+++  "keyToStringList": {
+++    "ChangesTree.GroupingKeys": [
+++      "module",
+++      "directory"
+++    ]
++   }
++ }]]></component>
++-  <component name="RecentsManager">
++-    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
++-      <recent name="org.example.veiw.enums" />
++-    </key>
++-  </component>
++   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
++   <component name="TaskManager">
++     <task active="true" id="Default" summary="Default task">
++@@ -75,7 +112,12 @@
++       <updated>1681886432173</updated>
++       <workItem from="1681886433354" duration="78000" />
++       <workItem from="1681886686257" duration="2512000" />
++-      <workItem from="1682084994720" duration="4296000" />
+++      <workItem from="1682084994720" duration="4517000" />
+++      <workItem from="1682091000420" duration="2004000" />
+++      <workItem from="1682105082710" duration="1616000" />
+++      <workItem from="1682146119318" duration="3976000" />
+++      <workItem from="1682150502559" duration="833000" />
+++      <workItem from="1682154466252" duration="2884000" />
++     </task>
++     <task id="LOCAL‎−۰۰۰۰۱" summary="creating files...">
++       <created>1681886768892</created>
++@@ -95,6 +137,7 @@
++       <option name="presentableId" value="LOCAL‎−۰۰۰۰۳" />
++       <updated>1682085989441</updated>
++     </task>
+++<<<<<<< HEAD
++     <task id="LOCAL-00004" summary="creating files...">
++       <created>1682100710982</created>
++       <option name="number" value="00004" />
++@@ -110,6 +153,69 @@
++       <updated>1682100873720</updated>
++     </task>
++     <option name="localTasksCounter" value="6" />
+++=======
+++    <task id="LOCAL‎−۰۰۰۰۴" summary="creating files...">
+++      <created>1682089936428</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۴" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۴" />
+++      <updated>1682089936428</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۰۵" summary="completing login menu...">
+++      <created>1682099652881</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۵" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۵" />
+++      <updated>1682099652881</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۰۶" summary="completing login menu...">
+++      <created>1682100394229</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۶" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۶" />
+++      <updated>1682100394229</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۰۷" summary="completing profile menu &#10;login menu completed!">
+++      <created>1682103950903</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۷" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۷" />
+++      <updated>1682103950903</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۰۸" summary="profile menu almost completed!">
+++      <created>1682105361256</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۸" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۸" />
+++      <updated>1682105361256</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۰۹" summary="profile menu almost completed!">
+++      <created>1682105632142</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۰۹" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۰۹" />
+++      <updated>1682105632142</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۱۰" summary="profile menu almost completed!">
+++      <created>1682106284755</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۱۰" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۱۰" />
+++      <updated>1682106284755</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۱۱" summary="creating my branch and completing sing up controller">
+++      <created>1682106445193</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۱۱" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۱۱" />
+++      <updated>1682106445193</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۱۲" summary="creating my branch and completing sing up controller">
+++      <created>1682106675513</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۱۲" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۱۲" />
+++      <updated>1682106675513</updated>
+++    </task>
+++    <task id="LOCAL‎−۰۰۰۱۳" summary="adding something to login menu">
+++      <created>1682146466982</created>
+++      <option name="number" value="LOCAL‎−۰۰۰۱۳" />
+++      <option name="presentableId" value="LOCAL‎−۰۰۰۱۳" />
+++      <updated>1682146466982</updated>
+++    </task>
+++    <option name="localTasksCounter" value="14" />
+++>>>>>>> origin/mahdi
++     <servers />
++   </component>
++   <component name="TypeScriptGeneratedFilesManager">
++@@ -126,7 +232,11 @@
++                   <entry key="branch">
++                     <value>
++                       <list>
+++<<<<<<< HEAD
++                         <option value="raya-map" />
+++=======
+++                        <option value="origin/mahdi" />
+++>>>>>>> origin/mahdi
++                       </list>
++                     </value>
++                   </entry>
++@@ -140,6 +250,11 @@
++   </component>
++   <component name="VcsManagerConfiguration">
++     <MESSAGE value="creating files..." />
++-    <option name="LAST_COMMIT_MESSAGE" value="creating files..." />
+++    <MESSAGE value="completing login menu..." />
+++    <MESSAGE value="completing profile menu &#10;login menu completed!" />
+++    <MESSAGE value="profile menu almost completed!" />
+++    <MESSAGE value="creating my branch and completing sing up controller" />
+++    <MESSAGE value="adding something to login menu" />
+++    <option name="LAST_COMMIT_MESSAGE" value="adding something to login menu" />
++   </component>
++ </project>
++\ No newline at end of file
Index: project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project.iml b/project.iml
--- a/project.iml	
+++ b/project.iml	
@@ -5,6 +5,11 @@
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
+    <dependency>
+            <groupId>org.passay</groupId>
+            <artifactId>passay</artifactId>
+            <version>1.3.1</version>
+    </dependency>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
Index: src/main/java/org/example/view/MapChangesMenu.java
===================================================================
diff --git a/src/main/java/org/example/view/MapChangesMenu.java b/src/main/java/org/example/view/MapChangesMenu.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/view/MapChangesMenu.java	
@@ -0,0 +1,37 @@
+package org.example.view;
+
+public class MapChangesMenu {
+    private void setTexture(int x , int y,String type)
+    {
+
+    }
+    private void setTexture(int x1, int y1,int x2, int y2,String type)
+    {
+
+    }
+    private void clear()
+    {
+
+    }
+    private void dropRock()
+    {
+    }
+    private void dropUnit(int x , int y, String type)
+    {
+
+    }
+    private void dropBuilding(int x , int y)
+    {
+
+    }
+    private void dropTree(int x , int y, String type)
+    {
+
+    }
+    private void dropRock(int x , int y , char direction)
+    {
+
+    }
+
+
+}
Index: pom.xml
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>untitled</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter-api</artifactId>
+            <version>5.9.2</version>
+            <scope>test</scope>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.passay/passay -->
+        <dependency>
+            <groupId>org.passay</groupId>
+            <artifactId>passay</artifactId>
+            <version>1.6.3</version>
+        </dependency>
+
+    </dependencies>
+
+
+    <properties>
+        <maven.compiler.source>19</maven.compiler.source>
+        <maven.compiler.target>19</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+</project>
\ No newline at end of file
Index: src/main/java/org/example/controller/SignupMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.SignupMenuOutput;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class SignupMenuController extends MainMenuController{\r\n    public SignupMenuOutput signupUser() {\r\n        if (usernameCheck(this.getUsername())==null) {\r\n            if (passwordCheck(this.getPassword()) == null) {\r\n                if (emailCheck(this.getEmail())==null) {\r\n                    //TODO: doing user signing in ...\r\n                    return null;\r\n                }\r\n                return SignupMenuOutput.INVALID_EMAIL_FORMAT;\r\n            }\r\n            return SignupMenuOutput.INVALID_PASSWORD_FORMAT;\r\n        }\r\n        return SignupMenuOutput.INVALID_USERNAME_FORMAT;\r\n    }\r\n\r\n    public SignupMenuOutput usernameCheck(String username) {\r\n        if (username.matches(\"^\\\\w+$\")) {\r\n            //TODO: checking other users....\r\n            return null;\r\n        }\r\n        return SignupMenuOutput.INVALID_USERNAME_FORMAT;\r\n    }\r\n\r\n\r\n    public SignupMenuOutput passwordCheck(String password) {\r\n        if (password.length()>=6) {\r\n            if (password.matches(\"[a-z]+\")) {\r\n                if (password.matches(\"[A-Z]+\")) {\r\n                    if (password.matches(\"\\\\d+\")) {\r\n                        if (password.matches(\"[',!;?$^:\\\\\\\\/`|~&\\\" @#%*{}()\\\\[\\\\]<>_+.\\\\s=-]\")) {\r\n                            return null;\r\n                        }\r\n                        return SignupMenuOutput.ERROR_PASSWORD_NO_SPECIAL_CHARACTER;\r\n                    }\r\n                    return SignupMenuOutput.ERROR_PASSWORD_NO_DIGITS;\r\n                }\r\n                return SignupMenuOutput.ERROR_PASSWORD_NO_CAPITAL_CHARACTER;\r\n            }\r\n            return SignupMenuOutput.ERROR_PASSWORD_NO_SMALL_CHARACTER;\r\n        }\r\n        return SignupMenuOutput.ERROR_PASSWORD_IS_TOO_SHORT;\r\n    }\r\n\r\n    public SignupMenuOutput emailCheck(String email) {\r\n        if (email.matches(\"[\\\\w.]+@[\\\\w.]+\\\\.[\\\\w.]+\")) {\r\n            //TODO:checking other emails...\r\n            return null;\r\n        }\r\n        return SignupMenuOutput.INVALID_EMAIL_FORMAT;\r\n    }\r\n\r\n    public String generateRandomSlogan() {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public String generateRandomPassword() {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void securityQuestion() {\r\n        //TODO:\r\n        return;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/SignupMenuController.java b/src/main/java/org/example/controller/SignupMenuController.java
--- a/src/main/java/org/example/controller/SignupMenuController.java	
+++ b/src/main/java/org/example/controller/SignupMenuController.java	
@@ -1,25 +1,26 @@
 package org.example.controller;
 
+
+import org.example.model.User;
 import org.example.view.enums.outputs.SignupMenuOutput;
 
-import javax.swing.*;
-
 public class SignupMenuController extends MainMenuController{
     public SignupMenuOutput signupUser() {
-        if (usernameCheck(this.getUsername())==null) {
-            if (passwordCheck(this.getPassword()) == null) {
-                if (emailCheck(this.getEmail())==null) {
-                    //TODO: doing user signing in ...
-                    return null;
-                }
-                return SignupMenuOutput.INVALID_EMAIL_FORMAT;
-            }
+        if (usernameCheck(this.getUsername())!=null)
+            return SignupMenuOutput.INVALID_USERNAME_FORMAT;
+        if (emailCheck(this.getEmail())!=null)
+            return SignupMenuOutput.INVALID_EMAIL_FORMAT;
+        if (passwordCheck(this.getPassword())!=null)
             return SignupMenuOutput.INVALID_PASSWORD_FORMAT;
+        if (this.getPassword().matches("\\s*random\\s*")) {
+            this.setClipBoard(generateRandomPassword());
+            return SignupMenuOutput.STAND_BY;
         }
-        return SignupMenuOutput.INVALID_USERNAME_FORMAT;
+        //TODO: completing later
+        return null;
     }
 
-    public SignupMenuOutput usernameCheck(String username) {
+    public static SignupMenuOutput usernameCheck(String username) {
         if (username.matches("^\\w+$")) {
             //TODO: checking other users....
             return null;
@@ -28,7 +29,7 @@
     }
 
 
-    public SignupMenuOutput passwordCheck(String password) {
+    public static SignupMenuOutput passwordCheck(String password) {
         if (password.length()>=6) {
             if (password.matches("[a-z]+")) {
                 if (password.matches("[A-Z]+")) {
@@ -47,7 +48,7 @@
         return SignupMenuOutput.ERROR_PASSWORD_IS_TOO_SHORT;
     }
 
-    public SignupMenuOutput emailCheck(String email) {
+    public static SignupMenuOutput emailCheck(String email) {
         if (email.matches("[\\w.]+@[\\w.]+\\.[\\w.]+")) {
             //TODO:checking other emails...
             return null;
@@ -56,17 +57,30 @@
     }
 
     public String generateRandomSlogan() {
-        //TODO:
+        //TODO: uncompleted method!
         return null;
     }
 
     public String generateRandomPassword() {
-        //TODO:
-        return null;
+        String password = null;
+        //TODO: generating strong password
+        return password;
     }
 
     public void securityQuestion() {
-        //TODO:
+        //TODO: uncompleted method!
         return;
     }
+
+    public boolean randomPasswordVerification(String verification) {
+        return verification.equals(this.getClipBoard());
+    }
+
+    public void signingsComplete() {
+        User newUser = new User(this.getUsername(), this.getPassword(), this.getNickname(), this.getEmail());
+        if (this.getSlogan()!=null) {
+            newUser.setSlogan(this.getSlogan());
+        }
+        newUser.addUser();
+    }
 }
Index: src/main/java/org/example/model/Government.java
===================================================================
diff --git a/src/main/java/org/example/model/Government.java b/src/main/java/org/example/model/gameData/Government.java
rename from src/main/java/org/example/model/Government.java
rename to src/main/java/org/example/model/gameData/Government.java
--- a/src/main/java/org/example/model/Government.java	
+++ b/src/main/java/org/example/model/gameData/Government.java	
@@ -1,4 +1,4 @@
-package org.example.model;
+package org.example.model.gameData;
 
 import org.example.model.enums.products;
 
Index: src/main/java/org/example/view/LoginMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.LoginMenuController;\r\nimport org.example.controller.ProfileMenuController;\r\nimport org.example.view.enums.commands.LoginMenuEnum;\r\nimport org.example.view.enums.outputs.LoginMenuOutput;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class LoginMenu {\r\n    private final LoginMenuController loginMenuController = new ProfileMenuController();\r\n\r\n    public void run(InputScanner loginMenuScanner) {\r\n        Matcher loginMenuMatcher;\r\n        String userInput;\r\n        while (true) {\r\n            userInput = loginMenuScanner.getScanner().nextLine();\r\n            if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))\r\n                return;\r\n            //TODO: completing login menu...\r\n        }\r\n    }\r\n\r\n    public void loginInCheck(Matcher mainMenuMatcher) {\r\n        loginMenuController.setUsername(\"username\");\r\n        loginMenuController.setPassword(\"password\");\r\n        loginMenuController.setStayLoggedInFlag(mainMenuMatcher.group(\"stayLogged\") != null);\r\n        String message = loginMenuController.loginUser().getOutput();\r\n        if (message.equals(LoginMenuOutput.LOGGED_IN_SUCCESSFULY)) {\r\n            //TODO: about saving user in the game...\r\n            InputScanner loginMenuScanner = new InputScanner();\r\n            run(loginMenuScanner);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/LoginMenu.java b/src/main/java/org/example/view/LoginMenu.java
--- a/src/main/java/org/example/view/LoginMenu.java	
+++ b/src/main/java/org/example/view/LoginMenu.java	
@@ -4,12 +4,13 @@
 import org.example.controller.LoginMenuController;
 import org.example.controller.ProfileMenuController;
 import org.example.view.enums.commands.LoginMenuEnum;
+import org.example.view.enums.commands.ProfileMenuEnum;
 import org.example.view.enums.outputs.LoginMenuOutput;
+import org.example.view.enums.outputs.ProfileMenuOutput;
 
-import java.util.Scanner;
 import java.util.regex.Matcher;
 
-public class LoginMenu {
+public class LoginMenu extends MainMenu {
     private final LoginMenuController loginMenuController = new ProfileMenuController();
 
     public void run(InputScanner loginMenuScanner) {
@@ -17,9 +18,32 @@
         String userInput;
         while (true) {
             userInput = loginMenuScanner.getScanner().nextLine();
+            ProfileMenu profileMenu = new ProfileMenu(loginMenuController);
             if (userInput.matches(LoginMenuEnum.USER_LOGOUT.getRegex()))
                 return;
-            //TODO: completing login menu...
+            else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_USERNAME))!=null) {
+                profileMenu.changeUserUsername(loginMenuMatcher);
+            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PASSWORD))!=null) {
+                profileMenu.changeUserPassword(loginMenuMatcher);
+            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_EMAIL))!=null) {
+                profileMenu.changeUserEmail(loginMenuMatcher);
+            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_PROFILE_NICKNAME))!=null) {
+                profileMenu.changeUserNickname(loginMenuMatcher);
+            } else if ((loginMenuMatcher = ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.CHANGE_SLOGAN))!=null) {
+                profileMenu.changeUserSlogan(loginMenuMatcher);
+            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.REMOVE_SLOGAN)!=null) {
+                profileMenu.removeUserSlogan();
+            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_PROFILE)!=null) {
+                profileMenu.displayUserProfile();
+            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_SLOGAN)!=null) {
+                profileMenu.displayUserSlogan();
+            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_USER_RANK)!=null) {
+                profileMenu.displayUserRank();
+            } else if (ProfileMenuEnum.getMatcher(userInput,ProfileMenuEnum.DISPLAY_PROFILE)!=null) {
+                profileMenu.displayUserInfo();
+            } else {
+                System.out.println(ProfileMenuOutput.INVALID_COMMAND.getOutput());
+            }
         }
     }
 
Index: src/main/java/org/example/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class User {\r\n    private String username;\r\n    private String password;\r\n    private String nickname;\r\n    private String email;\r\n    private String passRecoveryQuestion;\r\n    private String passRecoveryAnswer;\r\n    private int score;\r\n    private int rank;\r\n    private String slogan;\r\n    public static final ArrayList<User> allUsers = new ArrayList<>();\r\n\r\n    private void User(String username,String password,String nickname,String email){\r\n        this.username = username;\r\n        this.password = password;\r\n        this.nickname = nickname;\r\n        this.email = email;\r\n    }\r\n\r\n    private void User(String username,String password,String nickname,String email,String slogan){\r\n        this.username = username;\r\n        this.password = password;\r\n        this.nickname = nickname;\r\n        this.email = email;\r\n        this.slogan = slogan;\r\n        this.addUser();\r\n    }\r\n    public ArrayList<User> getAllUsers() {\r\n        return allUsers;\r\n    }\r\n    public void addUser() {\r\n        allUsers.add(this);\r\n    }\r\n    public void setRank(int rank) {\r\n        this.rank = rank;\r\n    }\r\n\r\n    public void setScore(int score) {\r\n        this.score = score;\r\n    }\r\n\r\n    public String getUsername(){\r\n        return this.username;\r\n    }\r\n\r\n    public String getPassword(){\r\n        return this.password;\r\n    }\r\n\r\n    public String getNickname(){\r\n        return this.nickname;\r\n    }\r\n\r\n    public String getEmail(){\r\n        return this.email;\r\n    }\r\n\r\n    public String getSlogan(){\r\n        return this.slogan;\r\n    }\r\n\r\n    public int getRank(){\r\n        return this.rank;\r\n    }\r\n\r\n    public int getScore(){\r\n        return this.score;\r\n    }\r\n\r\n    public void setPassword(String password){\r\n        this.password = password;\r\n    }\r\n\r\n    public void setUsername(String username){\r\n        this.username = username;\r\n    }\r\n\r\n    public void setNickname(String nickname){\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public void setEmail(String email){\r\n        this.email = email;\r\n    }\r\n\r\n    public void setSlogan(String slogan){\r\n        this.slogan = slogan;\r\n    }\r\n\r\n    public void setPassRecoveryQuestion(String passRecoveryQuestion){\r\n        this.passRecoveryQuestion = passRecoveryQuestion;\r\n    }\r\n\r\n    public void setPassRecoveryAnswer(String passRecoveryAnswer){\r\n        this.passRecoveryAnswer = passRecoveryAnswer;\r\n    }\r\n\r\n    public String getPassRecoveryQuestion(){\r\n        return this.passRecoveryQuestion;\r\n    }\r\n\r\n    public String getPassRecoveryAnswer(){\r\n        return this.passRecoveryAnswer;\r\n    }\r\n\r\n    public static User findUserWithPass(String password) {\r\n        for (User user:User.allUsers) {\r\n            if (user.getPassword().equals(password))\r\n                return user;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/User.java b/src/main/java/org/example/model/User.java
--- a/src/main/java/org/example/model/User.java	
+++ b/src/main/java/org/example/model/User.java	
@@ -14,14 +14,15 @@
     private String slogan;
     public static final ArrayList<User> allUsers = new ArrayList<>();
 
-    private void User(String username,String password,String nickname,String email){
+    public User(String username, String password, String nickname, String email) {
         this.username = username;
         this.password = password;
         this.nickname = nickname;
         this.email = email;
+        this.addUser();
     }
 
-    private void User(String username,String password,String nickname,String email,String slogan){
+    public User(String username, String password, String nickname, String email, String slogan) {
         this.username = username;
         this.password = password;
         this.nickname = nickname;
@@ -29,12 +30,15 @@
         this.slogan = slogan;
         this.addUser();
     }
+
     public ArrayList<User> getAllUsers() {
         return allUsers;
     }
+
     public void addUser() {
         allUsers.add(this);
     }
+
     public void setRank(int rank) {
         this.rank = rank;
     }
@@ -43,72 +47,72 @@
         this.score = score;
     }
 
-    public String getUsername(){
+    public String getUsername() {
         return this.username;
     }
 
-    public String getPassword(){
+    public String getPassword() {
         return this.password;
     }
 
-    public String getNickname(){
+    public String getNickname() {
         return this.nickname;
     }
 
-    public String getEmail(){
+    public String getEmail() {
         return this.email;
     }
 
-    public String getSlogan(){
+    public String getSlogan() {
         return this.slogan;
     }
 
-    public int getRank(){
+    public int getRank() {
         return this.rank;
     }
 
-    public int getScore(){
+    public int getScore() {
         return this.score;
     }
 
-    public void setPassword(String password){
+    public void setPassword(String password) {
         this.password = password;
     }
 
-    public void setUsername(String username){
+    public void setUsername(String username) {
         this.username = username;
     }
 
-    public void setNickname(String nickname){
+    public void setNickname(String nickname) {
         this.nickname = nickname;
     }
 
-    public void setEmail(String email){
+    public void setEmail(String email) {
         this.email = email;
     }
 
-    public void setSlogan(String slogan){
+    public void setSlogan(String slogan) {
         this.slogan = slogan;
     }
 
-    public void setPassRecoveryQuestion(String passRecoveryQuestion){
+    public void setPassRecoveryQuestion(String passRecoveryQuestion) {
         this.passRecoveryQuestion = passRecoveryQuestion;
     }
 
-    public void setPassRecoveryAnswer(String passRecoveryAnswer){
+    public void setPassRecoveryAnswer(String passRecoveryAnswer) {
         this.passRecoveryAnswer = passRecoveryAnswer;
     }
 
-    public String getPassRecoveryQuestion(){
+    public String getPassRecoveryQuestion() {
         return this.passRecoveryQuestion;
     }
 
-    public String getPassRecoveryAnswer(){
+    public String getPassRecoveryAnswer() {
         return this.passRecoveryAnswer;
     }
 
     public static User findUserWithPass(String password) {
-        for (User user:User.allUsers) {
+        for (User user : User.allUsers) {
             if (user.getPassword().equals(password))
                 return user;
         }
Index: src/main/java/org/example/model/map.java
===================================================================
diff --git a/src/main/java/org/example/model/map.java b/src/main/java/org/example/model/gameData/map.java
rename from src/main/java/org/example/model/map.java
rename to src/main/java/org/example/model/gameData/map.java
--- a/src/main/java/org/example/model/map.java	
+++ b/src/main/java/org/example/model/gameData/map.java	
@@ -1,11 +1,13 @@
-package org.example.model;
+package org.example.model.gameData;
+
+import org.example.model.tile;
 
 import java.util.ArrayList;
 
 public abstract class map {
     int height;
     int weight;
-     public static tile [][] currentMap = new tile[200][200];
+     public static tile[][] currentMap = new tile[200][200];
 
 
     public static tile[][] getCurrentMap() {
Index: src/main/java/org/example/controller/MainMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller;\r\n\r\npublic class MainMenuController {\r\n    private String username;\r\n    private String password;\r\n    private String nickname;\r\n    private String slogan;\r\n    private String email;\r\n\r\n    public MainMenuController() {\r\n        this.username = null;\r\n        this.password = null;\r\n        this.nickname = null;\r\n        this.slogan = null;\r\n        this.email = null;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public String getSlogan() {\r\n        return slogan;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public void setSlogan(String slogan) {\r\n        this.slogan = slogan;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/MainMenuController.java b/src/main/java/org/example/controller/MainMenuController.java
--- a/src/main/java/org/example/controller/MainMenuController.java	
+++ b/src/main/java/org/example/controller/MainMenuController.java	
@@ -6,6 +6,8 @@
     private String nickname;
     private String slogan;
     private String email;
+    private String clipBoard;
+
 
     public MainMenuController() {
         this.username = null;
@@ -13,6 +15,15 @@
         this.nickname = null;
         this.slogan = null;
         this.email = null;
+        this.clipBoard = null;
+    }
+
+    public String getClipBoard() {
+        return clipBoard;
+    }
+
+    public void setClipBoard(String clipBoard) {
+        this.clipBoard = clipBoard;
     }
 
     public String getUsername() {
Index: src/main/java/org/example/view/MainMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\nimport org.example.InputScanner;\r\nimport org.example.controller.MainMenuController;\r\nimport org.example.view.enums.commands.LoginMenuEnum;\r\nimport org.example.view.enums.commands.SignupMenuEnum;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class MainMenu {\r\n    private MainMenuController mainMenuController = new MainMenuController();\r\n    public void run() {\r\n        InputScanner mainMenuScanner = new InputScanner();\r\n        Matcher mainMenuMatcher;\r\n        String userInput;\r\n        while (true) {\r\n            userInput = mainMenuScanner.getScanner().nextLine();\r\n            if (userInput.matches(\"\\\\s*exit\\\\s*\"))\r\n                return;\r\n            else if ((mainMenuMatcher = SignupMenuEnum.getMatcher(userInput, SignupMenuEnum.USER_CREATION))!=null) {\r\n                new SignupMenu().checkSigningUp(mainMenuMatcher);\r\n            } else if ((mainMenuMatcher = LoginMenuEnum.getMatcher(userInput, LoginMenuEnum.USER_LOGIN))!=null) {\r\n                new LoginMenu().loginInCheck(mainMenuMatcher);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/MainMenu.java b/src/main/java/org/example/view/MainMenu.java
--- a/src/main/java/org/example/view/MainMenu.java	
+++ b/src/main/java/org/example/view/MainMenu.java	
@@ -5,6 +5,7 @@
 import org.example.view.enums.commands.LoginMenuEnum;
 import org.example.view.enums.commands.SignupMenuEnum;
 
+import javax.swing.*;
 import java.util.regex.Matcher;
 
 public class MainMenu {
@@ -21,6 +22,9 @@
                 new SignupMenu().checkSigningUp(mainMenuMatcher);
             } else if ((mainMenuMatcher = LoginMenuEnum.getMatcher(userInput, LoginMenuEnum.USER_LOGIN))!=null) {
                 new LoginMenu().loginInCheck(mainMenuMatcher);
+           /*} else if (SignupMenuEnum.getMatcher(userInput,SignupMenuEnum.CAREATE_MAP)!=null) {
+                new MapMenu().enterMapEnvironmentSettings();
+            }*/
             }
         }
     }
Index: src/main/java/org/example/controller/LoginMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.LoginMenuOutput;\r\n\r\npublic class LoginMenuController extends MainMenuController{\r\n    private boolean stayLoggedInFlag = false;\r\n\r\n    public LoginMenuOutput loginUser() {\r\n        if (checkMatchUsername(this.getUsername())) {\r\n            if (checkUsernameWithPassword(this.getUsername(),this.getPassword())) {\r\n                //TODO: later...\r\n                return LoginMenuOutput.LOGGED_IN_SUCCESSFULY;\r\n            }\r\n            return LoginMenuOutput.USER_AND_PASS_MATCH_ERROR;\r\n        }\r\n        return LoginMenuOutput.USER_DOES_NOT_EXIST;\r\n    }\r\n\r\n    public boolean checkMatchUsername(String username) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public boolean checkUsernameWithPassword(String username,String password) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public boolean checkSecurityQuestion(String answer) {\r\n        //TODO:\r\n        return true;\r\n    }\r\n\r\n    public LoginMenuOutput forgetPassword(String username) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void logoutUser() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void captcha() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public boolean isStayLoggedInFlag() {\r\n        return stayLoggedInFlag;\r\n    }\r\n\r\n    public void setStayLoggedInFlag(boolean stayLoggedInFlag) {\r\n        this.stayLoggedInFlag = stayLoggedInFlag;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/LoginMenuController.java b/src/main/java/org/example/controller/LoginMenuController.java
--- a/src/main/java/org/example/controller/LoginMenuController.java	
+++ b/src/main/java/org/example/controller/LoginMenuController.java	
@@ -1,5 +1,6 @@
 package org.example.controller;
 
+import org.example.model.User;
 import org.example.view.enums.outputs.LoginMenuOutput;
 
 public class LoginMenuController extends MainMenuController{
@@ -17,13 +18,22 @@
     }
 
     public boolean checkMatchUsername(String username) {
-        //TODO:
-        return true;
+        for (User user:User.allUsers) {
+            if (user.getUsername().equals(username))
+                return true;
+        }
+        return false;
     }
 
     public boolean checkUsernameWithPassword(String username,String password) {
-        //TODO:
-        return true;
+        for (User user:User.allUsers) {
+            if (user.getUsername().equals(username)) {
+                if (user.getPassword().equals(password)) {
+                    return true;
+                }
+            }
+        }
+        return false;
     }
 
     public boolean checkSecurityQuestion(String answer) {
Index: src/main/java/org/example/model/mapTemplates.java
===================================================================
diff --git a/src/main/java/org/example/model/mapTemplates.java b/src/main/java/org/example/model/gameData/mapTemplates.java
rename from src/main/java/org/example/model/mapTemplates.java
rename to src/main/java/org/example/model/gameData/mapTemplates.java
--- a/src/main/java/org/example/model/mapTemplates.java	
+++ b/src/main/java/org/example/model/gameData/mapTemplates.java	
@@ -1,4 +1,4 @@
-package org.example.model;
+package org.example.model.gameData;
 
 public class mapTemplates {
     //TODO : map ready templates should be made and saved hear
Index: src/main/java/org/example/model/gameData/gameDataBase.java
===================================================================
diff --git a/src/main/java/org/example/model/gameData/gameDataBase.java b/src/main/java/org/example/model/gameData/gameDataBase.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/model/gameData/gameDataBase.java	
@@ -0,0 +1,4 @@
+package org.example.model.gameData;
+
+public class gameDataBase {
+}
Index: src/main/java/org/example/controller/ProfileMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller;\r\n\r\nimport org.example.view.enums.outputs.ProfileMenuOutput;\r\n\r\npublic class ProfileMenuController extends LoginMenuController{\r\n    public ProfileMenuOutput changeUsername(String username) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeNickname(String nickname) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changePassword(String password) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeEmail(String email) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public ProfileMenuOutput changeSlogan(String slogan) {\r\n        //TODO:\r\n        return null;\r\n    }\r\n\r\n    public void removeSlogan() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserHighestScore() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserRank() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserSlogan() {\r\n        //TODO:\r\n        return;\r\n    }\r\n\r\n    public void showUserProfileDisplay() {\r\n        //TODO:\r\n        return;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/ProfileMenuController.java b/src/main/java/org/example/controller/ProfileMenuController.java
--- a/src/main/java/org/example/controller/ProfileMenuController.java	
+++ b/src/main/java/org/example/controller/ProfileMenuController.java	
@@ -1,55 +1,87 @@
 package org.example.controller;
 
+import org.example.model.User;
 import org.example.view.enums.outputs.ProfileMenuOutput;
 
+
 public class ProfileMenuController extends LoginMenuController{
     public ProfileMenuOutput changeUsername(String username) {
-        //TODO:
-        return null;
+        if (SignupMenuController.usernameCheck(username)==null) {
+            for (User user:User.allUsers) {
+                if (user.getUsername().equals(this.getUsername())) {
+                    user.setUsername(username);
+                    this.setUsername(username);
+                    return ProfileMenuOutput.USERNAME_CHANGED_SUCCESSFULLY;
+                }
+            }
+        }
+        return ProfileMenuOutput.INVALID_NEW_USERNAME;
     }
 
     public ProfileMenuOutput changeNickname(String nickname) {
-        //TODO:
-        return null;
+        User.findUserWithPass(this.getPassword()).setNickname(nickname);
+        this.setNickname(nickname);
+        return ProfileMenuOutput.NICKNAME_CHANGED_SUCCESSFULLY;
     }
 
-    public ProfileMenuOutput changePassword(String password) {
-        //TODO:
-        return null;
+    public ProfileMenuOutput changePassword(String oldPass,String newPass) {
+        if (this.getPassword().equals(oldPass)) {
+            if (!oldPass.equals(newPass)) {
+                if (SignupMenuController.passwordCheck(newPass)==null) {
+                    User.findUserWithPass(oldPass).setPassword(newPass);
+                    this.setPassword(newPass);
+                    return ProfileMenuOutput.PASSWORD_CHANGED_SUCCESSFULLY;
+                }
+                return ProfileMenuOutput.INVALID_NEW_PASSWORD;
+            }
+            return ProfileMenuOutput.NEWPASS_AND_OLDPASS_ARE_EQUALS;
+        }
+        return ProfileMenuOutput.INVALID_CURRENT_PASSWORD;
     }
 
     public ProfileMenuOutput changeEmail(String email) {
-        //TODO:
-        return null;
+        if (SignupMenuController.emailCheck(email)==null) {
+            User.findUserWithPass(this.getPassword()).setEmail(email);
+            this.setEmail(email);
+            return ProfileMenuOutput.EMAIL_CHANGED_SUCCESSFULLY;
+        }
+        return ProfileMenuOutput.INVALID_NEW_EMAIL;
     }
 
     public ProfileMenuOutput changeSlogan(String slogan) {
-        //TODO:
-        return null;
+        User.findUserWithPass(this.getPassword()).setSlogan(slogan);
+        this.setSlogan(slogan);
+        return ProfileMenuOutput.SLOGAN_CHANGED_SUCCESSFULLY;
     }
 
-    public void removeSlogan() {
-        //TODO:
-        return;
+    public ProfileMenuOutput removeSlogan() {
+        User.findUserWithPass(this.getPassword()).setSlogan(null);
+        this.setSlogan(null);
+        return ProfileMenuOutput.SLOGAN_REMOVED_SUCCESSFULLY;
     }
 
     public void showUserHighestScore() {
-        //TODO:
-        return;
+        //TODO: after completing other parts!
     }
 
     public void showUserRank() {
-        //TODO:
-        return;
+        //TODO: after completing other parts!
     }
 
     public void showUserSlogan() {
-        //TODO:
-        return;
+        System.out.println(this.getSlogan());
     }
 
     public void showUserProfileDisplay() {
-        //TODO:
-        return;
+        System.out.println("username:"+this.getUsername());
+        StringBuilder password = new StringBuilder("*");
+        for (int i=1;i<this.getPassword().length();i++) {
+            password.append("*");
+        }
+        System.out.println("password:"+password);
+        System.out.println("email:"+this.getEmail());
+        System.out.println("nickname:"+this.getNickname());
+        System.out.println("slogan:"+this.getSlogan());
+        //TODO:user rank and high score are left..
     }
 }
Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="project-group-15" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="project-group-15" target="19" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/org/example/view/SignupMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view;\r\n\r\n\r\n\r\nimport org.example.controller.SignupMenuController;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\npublic class SignupMenu extends MainMenu{\r\n    private final SignupMenuController signupMenuController = new SignupMenuController();\r\n    public void checkSigningUp(Matcher matcher) {\r\n        signupMenuController.setUsername(matcher.group(\"username\"));\r\n        signupMenuController.setPassword(matcher.group(\"password\"));\r\n        signupMenuController.setNickname(matcher.group(\"nickname\"));\r\n        signupMenuController.setEmail(matcher.group(\"email\"));\r\n        signupMenuController.setSlogan(matcher.group(\"slogan\"));\r\n        System.out.println(signupMenuController.signupUser());\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/SignupMenu.java b/src/main/java/org/example/view/SignupMenu.java
--- a/src/main/java/org/example/view/SignupMenu.java	
+++ b/src/main/java/org/example/view/SignupMenu.java	
@@ -3,6 +3,7 @@
 
 
 import org.example.controller.SignupMenuController;
+import org.example.view.enums.outputs.SignupMenuOutput;
 
 import java.util.regex.Matcher;
 
@@ -14,6 +15,22 @@
         signupMenuController.setNickname(matcher.group("nickname"));
         signupMenuController.setEmail(matcher.group("email"));
         signupMenuController.setSlogan(matcher.group("slogan"));
+        String message = signupMenuController.signupUser().getOutput();
+        if (message.equals(SignupMenuOutput.STAND_BY.getOutput())) {
+            System.out.println("you password is: "+signupMenuController.getClipBoard());
+            String verification = null;
+            while (true) {
+                System.out.println("re-enter your password please: ");
+                if (signupMenuController.randomPasswordVerification(verification)) {
+                    signupMenuController.signingsComplete();
+                    return;
+                } else if (verification.matches("^\\s*quit\\s*$")) {
+                    return;
+                } else {
+                    System.out.println("doesn't matched to the password!,\n try again! or enter \"quit\" to exit");
+                }
+            }
+        }
         System.out.println(signupMenuController.signupUser());
     }
 
Index: .idea/encodings.xml
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view.enums.outputs;\r\n\r\npublic enum ProfileMenuOutput {\r\n    USERNAME_CHANGED_SUCCESSFULLY(\"username changed successfully!\"),\r\n    PASSWORD_CHANGED_SUCCESSFULLY(\"password changed successfully!\"),\r\n    NICKNAME_CHANGED_SUCCESSFULLY(\"nickname changed successfully!\"),\r\n    EMAIL_CHANGED_SUCCESSFULLY(\"email changed successfully!\"),\r\n    SLOGAN_CHANGED_SUCCESSFULLY(\"slogan changed successfully!\"),\r\n\r\n    NEWPASS_AND_OLDPASS_ARE_EQUALS(\"your new password is equal to your current password!,\\ntry something else!\"),\r\n    INVALID_CURRENT_PASSWORD(\"Current password is incorrect!\"),\r\n    INVALID_NEW_PASSWORD(\"Please enter a new password!\"),\r\n    INVALID_NEW_USERNAME(\"you entered invalid format of username!,\\ntry again!\"),\r\n    INVALID_NEW_NICKNAME(\"you entered invalid format of nickname!,\\ntry again!\"),\r\n    INVALID_NEW_EMAIL(\"you entered invalid format of email!,\\ntry again!\"),\r\n    INVALID_COMMAND(\"you entered invalid command!,\\nenter \\\"game --help\\\" for hint!\"),\r\n\r\n    ;\r\n    private final String output;\r\n\r\n    public String getOutput() {\r\n        return output;\r\n    }\r\n\r\n    ProfileMenuOutput(String output) {\r\n        this.output = output;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java b/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java
--- a/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java	
+++ b/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java	
@@ -6,6 +6,7 @@
     NICKNAME_CHANGED_SUCCESSFULLY("nickname changed successfully!"),
     EMAIL_CHANGED_SUCCESSFULLY("email changed successfully!"),
     SLOGAN_CHANGED_SUCCESSFULLY("slogan changed successfully!"),
+    SLOGAN_REMOVED_SUCCESSFULLY("slogan removed successfully!"),
 
     NEWPASS_AND_OLDPASS_ARE_EQUALS("your new password is equal to your current password!,\ntry something else!"),
     INVALID_CURRENT_PASSWORD("Current password is incorrect!"),
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_passay_passay_1_6_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_passay_passay_1_6_3.xml b/.idea/libraries/Maven__org_passay_passay_1_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_passay_passay_1_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.passay:passay:1.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/passay/passay/1.6.3/passay-1.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view.enums.outputs;\r\n\r\npublic enum SignupMenuOutput {\r\n    EMPTY_FIELD(\"you just missed some fields,\\ntry again!\"),\r\n    INVALID_USERNAME_FORMAT(\"username format is invalid!,\\ntry again!\"),\r\n    INVALID_PASSWORD_FORMAT(\"password format is invalid!,\\ntry something else...\"),\r\n    ERROR_PASSWORD_IS_TOO_SHORT(\"your password is too short!: your password must contain at least 6 characters!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_CAPITAL_CHARACTER(\"invalid password format!: your password must contain at least 1 capital alphabet!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_SMALL_CHARACTER(\"invalid password format!: your password must contain at least 1 small alphabet!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_DIGITS(\"invalid password format!: your password must contain at least 1 digits!,\\ntry again!\"),\r\n    ERROR_PASSWORD_NO_SPECIAL_CHARACTER(\"invalid password format!: your password must contain at least 1 special character!,\\ntry again!\"),\r\n    USERNAME_EXISTS(\"you can't user this username because it already exists!,\\n try something else...\"),\r\n    WEAK_PASSWORD(\"your password is weak!,\\ntry something harder or user \\\"random password\\\"\"),\r\n    USER_AND_PASS_MATCH_ERROR(\"your password is incorrect,\\nenter the correct password or try \\\"forget password\\\"\"),\r\n    DUPLICATE_EMAIL_ERROR(\"a user with this email already exists,\\n enter unique email please!\"),\r\n    INVALID_EMAIL_FORMAT(\"email format is invalid!,\\ntry again!\"),\r\n\r\n\r\n    ;\r\n    private final String output;\r\n\r\n    public String getOutput() {\r\n        return output;\r\n    }\r\n\r\n    SignupMenuOutput(String output) {\r\n        this.output = output;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java b/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java
--- a/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java	
+++ b/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java	
@@ -9,6 +9,7 @@
     ERROR_PASSWORD_NO_SMALL_CHARACTER("invalid password format!: your password must contain at least 1 small alphabet!,\ntry again!"),
     ERROR_PASSWORD_NO_DIGITS("invalid password format!: your password must contain at least 1 digits!,\ntry again!"),
     ERROR_PASSWORD_NO_SPECIAL_CHARACTER("invalid password format!: your password must contain at least 1 special character!,\ntry again!"),
+    STAND_BY("standing by"),
     USERNAME_EXISTS("you can't user this username because it already exists!,\n try something else..."),
     WEAK_PASSWORD("your password is weak!,\ntry something harder or user \"random password\""),
     USER_AND_PASS_MATCH_ERROR("your password is incorrect,\nenter the correct password or try \"forget password\""),
Index: src/main/java/org/example/view/enums/commands/SignupMenuEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.view.enums.commands;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic enum SignupMenuEnum {\r\n    USER_CREATION(\"^user\\\\s+create\\\\s+((-u\\\\s+(?<username>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(\\\\s*-p\\\\s+(?<password>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s+(?<configuration>)[^\\\\\\\"]\\\\S*|\" +\r\n            \"\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*|(-e\\\\s+(?<email>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(-n\\\\s+(?<nickname>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*)|\" +\r\n            \"(-s\\\\s+(?<slogan>[^\\\\\\\"]\\\\S*|\\\\\\\"[^\\\\\\\"]+\\\\\\\")\\\\s*))+$\"),\r\n    PICK_QUESTION(\"^\\\\s*question\\\\s*pick\\\\s*\"),\r\n\r\n    ;\r\n\r\n    private final String regex;\r\n\r\n    SignupMenuEnum(String regex) {\r\n        this.regex = regex;\r\n    }\r\n\r\n    public String getRegex() {\r\n        return regex;\r\n    }\r\n\r\n    public static Matcher getMatcher(String input, SignupMenuEnum regex) {\r\n        Matcher matcher = Pattern.compile(regex.getRegex(), Pattern.CASE_INSENSITIVE).matcher(input);\r\n        return matcher.matches() ? matcher : null;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java b/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java
--- a/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java	
+++ b/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java	
@@ -10,6 +10,7 @@
             "(-n\\s+(?<nickname>[^\\\"]\\S*|\\\"[^\\\"]+\\\")\\s*)|" +
             "(-s\\s+(?<slogan>[^\\\"]\\S*|\\\"[^\\\"]+\\\")\\s*))+$"),
     PICK_QUESTION("^\\s*question\\s*pick\\s*"),
+    CAREATE_MAP("^\\s*create\\s+map\\s*$"),
 
     ;
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"creating files...\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/map.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/tile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"raya-map2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OdNK38UNz2OrnIqCzmN0SMvyKl\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/uni/ap/src\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example.veiw.enums\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4908046b-a59d-480a-b0ae-14605eb14fdd\" name=\"Changes\" comment=\"\" />\r\n      <created>1681886432173</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681886432173</updated>\r\n      <workItem from=\"1681886433354\" duration=\"78000\" />\r\n      <workItem from=\"1681886686257\" duration=\"2512000\" />\r\n      <workItem from=\"1682084994720\" duration=\"4296000\" />\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۱\" summary=\"creating files...\">\r\n      <created>1681886768892</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۱\" />\r\n      <updated>1681886768892</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۲\" summary=\"creating files...\">\r\n      <created>1682085187908</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۲\" />\r\n      <updated>1682085187908</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E−۰۰۰۰۳\" summary=\"creating files...\">\r\n      <created>1682085989441</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E−۰۰۰۰۳\" />\r\n      <updated>1682085989441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"creating files...\">\r\n      <created>1682100710982</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100710982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"creating files...\">\r\n      <created>1682100873720</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682100873720</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"raya-map\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"creating files...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"creating files...\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,15 +4,42 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4908046b-a59d-480a-b0ae-14605eb14fdd" name="Changes" comment="creating files...">
+    <list default="true" id="6cd6bfc8-c74a-4e9b-9d24-81d9fa748f04" name="Changes" comment="creating files...">
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_passay_passay_1_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_23_2023_5_43_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2023_5_40_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/GovernmentController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/MapChangesMenuController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/model/gameData/gameDataBase.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/view/MapChangesMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/project-group-15.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/project-group-15.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/project.iml" beforeDir="false" afterPath="$PROJECT_DIR$/project.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/LoginMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/LoginMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/ProfileMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/ProfileMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/SignupMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/SignupMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/governmentController.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/mapChangesMenuController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/map.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/tile.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapChangesMenu.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/mapMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/MapMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/Government.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/gameData/Government.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/gameData/map.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/mapTemplates.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/gameData/mapTemplates.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/GameMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/GameMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/LoginMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/LoginMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/MainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/MainMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/ProfileMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/ProfileMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/SignupMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/SignupMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/enums/commands/SignupMenuEnum.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/ProfileMenuOutput.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/enums/outputs/SignupMenuOutput.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/view/mapMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/view/MapMenu.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,11 +57,10 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="raya-map2" />
+        <entry key="$PROJECT_DIR$" value="test" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -44,22 +70,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "D:/uni/ap/src",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/uni/ap/exercises/2/snappfood&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="org.example.veiw.enums" />
@@ -95,21 +121,7 @@
       <option name="presentableId" value="LOCAL‎−۰۰۰۰۳" />
       <updated>1682085989441</updated>
     </task>
-    <task id="LOCAL-00004" summary="creating files...">
-      <created>1682100710982</created>
-      <option name="number" value="00004" />
-      <option name="presentableId" value="LOCAL-00004" />
-      <option name="project" value="LOCAL" />
-      <updated>1682100710982</updated>
-    </task>
-    <task id="LOCAL-00005" summary="creating files...">
-      <created>1682100873720</created>
-      <option name="number" value="00005" />
-      <option name="presentableId" value="LOCAL-00005" />
-      <option name="project" value="LOCAL" />
-      <updated>1682100873720</updated>
-    </task>
-    <option name="localTasksCounter" value="6" />
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -126,7 +138,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="raya-map" />
+                        <option value="test" />
                       </list>
                     </value>
                   </entry>
@@ -141,5 +153,6 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="creating files..." />
     <option name="LAST_COMMIT_MESSAGE" value="creating files..." />
+    <option name="GROUP_MULTIFILE_MERGE_BY_DIRECTORY" value="true" />
   </component>
 </project>
\ No newline at end of file
